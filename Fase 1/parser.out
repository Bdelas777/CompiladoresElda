Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var dec_funcs TOKEN_MAIN body TOKEN_END
Rule 2     dec_var -> vars
Rule 3     dec_var -> empty
Rule 4     dec_funcs -> funcs dec_funcs
Rule 5     dec_funcs -> empty
Rule 6     vars -> TOKEN_VAR variable rep_var
Rule 7     rep_var -> variable rep_var
Rule 8     rep_var -> empty
Rule 9     variable -> TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLON
Rule 10    mas_ids -> TOKEN_COMMA TOKEN_ID mas_ids
Rule 11    mas_ids -> empty
Rule 12    type -> TOKEN_INT
Rule 13    type -> TOKEN_FLOAT
Rule 14    body -> TOKEN_LBRACE dec_statements TOKEN_RBRACE
Rule 15    dec_statements -> statement dec_statements
Rule 16    dec_statements -> empty
Rule 17    statement -> assign
Rule 18    statement -> condition
Rule 19    statement -> cycle
Rule 20    statement -> f_call
Rule 21    statement -> print
Rule 22    print -> TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLON
Rule 23    expresiones -> TOKEN_CTE_STRING comas
Rule 24    expresiones -> expresion comas
Rule 25    comas -> TOKEN_COMMA expresion comas
Rule 26    comas -> TOKEN_COMMA TOKEN_CTE_STRING comas
Rule 27    comas -> empty
Rule 28    cycle -> TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON
Rule 29    condition -> TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN body else TOKEN_SEMICOLON
Rule 30    else -> TOKEN_ELSE body
Rule 31    else -> empty
Rule 32    cte -> TOKEN_CTE_INT
Rule 33    cte -> TOKEN_CTE_FLOAT
Rule 34    expresion -> exp comparar
Rule 35    comparar -> signo exp
Rule 36    comparar -> empty
Rule 37    signo -> TOKEN_GT
Rule 38    signo -> TOKEN_LT
Rule 39    signo -> TOKEN_NE
Rule 40    exp -> termino suma_resta
Rule 41    suma_resta -> TOKEN_PLUS termino suma_resta
Rule 42    suma_resta -> TOKEN_MINUS termino suma_resta
Rule 43    suma_resta -> empty
Rule 44    termino -> factor multi_div
Rule 45    multi_div -> operacion_mul_div factor multi_div
Rule 46    multi_div -> empty
Rule 47    operacion_mul_div -> TOKEN_DIV
Rule 48    operacion_mul_div -> TOKEN_MULT
Rule 49    factor -> definicion
Rule 50    factor -> operaciones
Rule 51    definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN
Rule 52    operaciones -> opciones_mas_menos id_cte
Rule 53    opciones_mas_menos -> TOKEN_PLUS
Rule 54    opciones_mas_menos -> TOKEN_MINUS
Rule 55    opciones_mas_menos -> empty
Rule 56    id_cte -> TOKEN_ID
Rule 57    id_cte -> cte
Rule 58    funcs -> TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL TOKEN_SEMICOLON
Rule 59    tipo -> def_tipo
Rule 60    tipo -> empty
Rule 61    def_tipo -> TOKEN_ID TOKEN_COLON type coma
Rule 62    coma -> TOKEN_COMMA TOKEN_ID TOKEN_COLON type coma
Rule 63    coma -> empty
Rule 64    var -> vars
Rule 65    var -> empty
Rule 66    f_call -> TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLON
Rule 67    def_exp -> expresion coma2
Rule 68    def_exp -> empty
Rule 69    coma2 -> TOKEN_COMMA expresion coma2
Rule 70    coma2 -> empty
Rule 71    assign -> TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLON
Rule 72    empty -> <empty>

Terminals, with rules where they appear

TOKEN_ASSIGN         : 71
TOKEN_COLON          : 9 61 62
TOKEN_COMMA          : 10 25 26 62 69
TOKEN_CTE_FLOAT      : 33
TOKEN_CTE_INT        : 32
TOKEN_CTE_STRING     : 23 26
TOKEN_DIV            : 47
TOKEN_DO             : 28
TOKEN_ELSE           : 30
TOKEN_END            : 1
TOKEN_FLOAT          : 13
TOKEN_GT             : 37
TOKEN_ID             : 1 9 10 56 58 61 62 66 71
TOKEN_IF             : 29
TOKEN_INT            : 12
TOKEN_LBRACE         : 14
TOKEN_LCOL           : 58
TOKEN_LPAREN         : 22 28 29 51 58 66
TOKEN_LT             : 38
TOKEN_MAIN           : 1
TOKEN_MINUS          : 42 54
TOKEN_MULT           : 48
TOKEN_NE             : 39
TOKEN_PLUS           : 41 53
TOKEN_PRINT          : 22
TOKEN_PROGRAM        : 1
TOKEN_RBRACE         : 14
TOKEN_RCOL           : 58
TOKEN_RPAREN         : 22 28 29 51 58 66
TOKEN_SEMICOLON      : 1 9 22 28 29 58 66 71
TOKEN_VAR            : 6
TOKEN_VOID           : 58
TOKEN_WHILE          : 28
error                : 

Nonterminals, with rules where they appear

assign               : 17
body                 : 1 28 29 30 58
coma                 : 61 62
coma2                : 67 69
comas                : 23 24 25 26
comparar             : 34
condition            : 18
cte                  : 57
cycle                : 19
dec_funcs            : 1 4
dec_statements       : 14 15
dec_var              : 1
def_exp              : 66
def_tipo             : 59
definicion           : 49
else                 : 29
empty                : 3 5 8 11 16 27 31 36 43 46 55 60 63 65 68 70
exp                  : 34 35
expresion            : 24 25 28 29 51 67 69 71
expresiones          : 22
f_call               : 20
factor               : 44 45
funcs                : 4
id_cte               : 52
mas_ids              : 9 10
multi_div            : 44 45
opciones_mas_menos   : 52
operacion_mul_div    : 45
operaciones          : 50
print                : 21
programa             : 0
rep_var              : 6 7
signo                : 35
statement            : 15
suma_resta           : 40 41 42
termino              : 40 41 42
tipo                 : 58
type                 : 9 61 62
var                  : 58
variable             : 6 7
vars                 : 2 64

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var dec_funcs TOKEN_MAIN body TOKEN_END

    TOKEN_PROGRAM   shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> TOKEN_PROGRAM . TOKEN_ID TOKEN_SEMICOLON dec_var dec_funcs TOKEN_MAIN body TOKEN_END

    TOKEN_ID        shift and go to state 3


state 3

    (1) programa -> TOKEN_PROGRAM TOKEN_ID . TOKEN_SEMICOLON dec_var dec_funcs TOKEN_MAIN body TOKEN_END

    TOKEN_SEMICOLON shift and go to state 4


state 4

    (1) programa -> TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON . dec_var dec_funcs TOKEN_MAIN body TOKEN_END
    (2) dec_var -> . vars
    (3) dec_var -> . empty
    (6) vars -> . TOKEN_VAR variable rep_var
    (72) empty -> .

    TOKEN_VAR       shift and go to state 8
    TOKEN_VOID      reduce using rule 72 (empty -> .)
    TOKEN_MAIN      reduce using rule 72 (empty -> .)

    dec_var                        shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) programa -> TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var . dec_funcs TOKEN_MAIN body TOKEN_END
    (4) dec_funcs -> . funcs dec_funcs
    (5) dec_funcs -> . empty
    (58) funcs -> . TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL TOKEN_SEMICOLON
    (72) empty -> .

    TOKEN_VOID      shift and go to state 12
    TOKEN_MAIN      reduce using rule 72 (empty -> .)

    dec_funcs                      shift and go to state 9
    funcs                          shift and go to state 10
    empty                          shift and go to state 11

state 6

    (2) dec_var -> vars .

    TOKEN_VOID      reduce using rule 2 (dec_var -> vars .)
    TOKEN_MAIN      reduce using rule 2 (dec_var -> vars .)


state 7

    (3) dec_var -> empty .

    TOKEN_VOID      reduce using rule 3 (dec_var -> empty .)
    TOKEN_MAIN      reduce using rule 3 (dec_var -> empty .)


state 8

    (6) vars -> TOKEN_VAR . variable rep_var
    (9) variable -> . TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLON

    TOKEN_ID        shift and go to state 14

    variable                       shift and go to state 13

state 9

    (1) programa -> TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var dec_funcs . TOKEN_MAIN body TOKEN_END

    TOKEN_MAIN      shift and go to state 15


state 10

    (4) dec_funcs -> funcs . dec_funcs
    (4) dec_funcs -> . funcs dec_funcs
    (5) dec_funcs -> . empty
    (58) funcs -> . TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL TOKEN_SEMICOLON
    (72) empty -> .

    TOKEN_VOID      shift and go to state 12
    TOKEN_MAIN      reduce using rule 72 (empty -> .)

    funcs                          shift and go to state 10
    dec_funcs                      shift and go to state 16
    empty                          shift and go to state 11

state 11

    (5) dec_funcs -> empty .

    TOKEN_MAIN      reduce using rule 5 (dec_funcs -> empty .)


state 12

    (58) funcs -> TOKEN_VOID . TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL TOKEN_SEMICOLON

    TOKEN_ID        shift and go to state 17


state 13

    (6) vars -> TOKEN_VAR variable . rep_var
    (7) rep_var -> . variable rep_var
    (8) rep_var -> . empty
    (9) variable -> . TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLON
    (72) empty -> .

    TOKEN_ID        shift and go to state 14
    TOKEN_VOID      reduce using rule 72 (empty -> .)
    TOKEN_MAIN      reduce using rule 72 (empty -> .)
    TOKEN_LBRACE    reduce using rule 72 (empty -> .)

    variable                       shift and go to state 18
    rep_var                        shift and go to state 19
    empty                          shift and go to state 20

state 14

    (9) variable -> TOKEN_ID . mas_ids TOKEN_COLON type TOKEN_SEMICOLON
    (10) mas_ids -> . TOKEN_COMMA TOKEN_ID mas_ids
    (11) mas_ids -> . empty
    (72) empty -> .

    TOKEN_COMMA     shift and go to state 22
    TOKEN_COLON     reduce using rule 72 (empty -> .)

    mas_ids                        shift and go to state 21
    empty                          shift and go to state 23

state 15

    (1) programa -> TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var dec_funcs TOKEN_MAIN . body TOKEN_END
    (14) body -> . TOKEN_LBRACE dec_statements TOKEN_RBRACE

    TOKEN_LBRACE    shift and go to state 25

    body                           shift and go to state 24

state 16

    (4) dec_funcs -> funcs dec_funcs .

    TOKEN_MAIN      reduce using rule 4 (dec_funcs -> funcs dec_funcs .)


state 17

    (58) funcs -> TOKEN_VOID TOKEN_ID . TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL TOKEN_SEMICOLON

    TOKEN_LPAREN    shift and go to state 26


state 18

    (7) rep_var -> variable . rep_var
    (7) rep_var -> . variable rep_var
    (8) rep_var -> . empty
    (9) variable -> . TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLON
    (72) empty -> .

    TOKEN_ID        shift and go to state 14
    TOKEN_VOID      reduce using rule 72 (empty -> .)
    TOKEN_MAIN      reduce using rule 72 (empty -> .)
    TOKEN_LBRACE    reduce using rule 72 (empty -> .)

    variable                       shift and go to state 18
    rep_var                        shift and go to state 27
    empty                          shift and go to state 20

state 19

    (6) vars -> TOKEN_VAR variable rep_var .

    TOKEN_VOID      reduce using rule 6 (vars -> TOKEN_VAR variable rep_var .)
    TOKEN_MAIN      reduce using rule 6 (vars -> TOKEN_VAR variable rep_var .)
    TOKEN_LBRACE    reduce using rule 6 (vars -> TOKEN_VAR variable rep_var .)


state 20

    (8) rep_var -> empty .

    TOKEN_VOID      reduce using rule 8 (rep_var -> empty .)
    TOKEN_MAIN      reduce using rule 8 (rep_var -> empty .)
    TOKEN_LBRACE    reduce using rule 8 (rep_var -> empty .)


state 21

    (9) variable -> TOKEN_ID mas_ids . TOKEN_COLON type TOKEN_SEMICOLON

    TOKEN_COLON     shift and go to state 28


state 22

    (10) mas_ids -> TOKEN_COMMA . TOKEN_ID mas_ids

    TOKEN_ID        shift and go to state 29


state 23

    (11) mas_ids -> empty .

    TOKEN_COLON     reduce using rule 11 (mas_ids -> empty .)


state 24

    (1) programa -> TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var dec_funcs TOKEN_MAIN body . TOKEN_END

    TOKEN_END       shift and go to state 30


state 25

    (14) body -> TOKEN_LBRACE . dec_statements TOKEN_RBRACE
    (15) dec_statements -> . statement dec_statements
    (16) dec_statements -> . empty
    (17) statement -> . assign
    (18) statement -> . condition
    (19) statement -> . cycle
    (20) statement -> . f_call
    (21) statement -> . print
    (72) empty -> .
    (71) assign -> . TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLON
    (29) condition -> . TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN body else TOKEN_SEMICOLON
    (28) cycle -> . TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON
    (66) f_call -> . TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLON
    (22) print -> . TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLON

    TOKEN_RBRACE    reduce using rule 72 (empty -> .)
    TOKEN_ID        shift and go to state 39
    TOKEN_IF        shift and go to state 40
    TOKEN_WHILE     shift and go to state 41
    TOKEN_PRINT     shift and go to state 42

    dec_statements                 shift and go to state 31
    statement                      shift and go to state 32
    empty                          shift and go to state 33
    assign                         shift and go to state 34
    condition                      shift and go to state 35
    cycle                          shift and go to state 36
    f_call                         shift and go to state 37
    print                          shift and go to state 38

state 26

    (58) funcs -> TOKEN_VOID TOKEN_ID TOKEN_LPAREN . tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL TOKEN_SEMICOLON
    (59) tipo -> . def_tipo
    (60) tipo -> . empty
    (61) def_tipo -> . TOKEN_ID TOKEN_COLON type coma
    (72) empty -> .

    TOKEN_ID        shift and go to state 43
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    tipo                           shift and go to state 44
    def_tipo                       shift and go to state 45
    empty                          shift and go to state 46

state 27

    (7) rep_var -> variable rep_var .

    TOKEN_VOID      reduce using rule 7 (rep_var -> variable rep_var .)
    TOKEN_MAIN      reduce using rule 7 (rep_var -> variable rep_var .)
    TOKEN_LBRACE    reduce using rule 7 (rep_var -> variable rep_var .)


state 28

    (9) variable -> TOKEN_ID mas_ids TOKEN_COLON . type TOKEN_SEMICOLON
    (12) type -> . TOKEN_INT
    (13) type -> . TOKEN_FLOAT

    TOKEN_INT       shift and go to state 48
    TOKEN_FLOAT     shift and go to state 49

    type                           shift and go to state 47

state 29

    (10) mas_ids -> TOKEN_COMMA TOKEN_ID . mas_ids
    (10) mas_ids -> . TOKEN_COMMA TOKEN_ID mas_ids
    (11) mas_ids -> . empty
    (72) empty -> .

    TOKEN_COMMA     shift and go to state 22
    TOKEN_COLON     reduce using rule 72 (empty -> .)

    mas_ids                        shift and go to state 50
    empty                          shift and go to state 23

state 30

    (1) programa -> TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var dec_funcs TOKEN_MAIN body TOKEN_END .

    $end            reduce using rule 1 (programa -> TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var dec_funcs TOKEN_MAIN body TOKEN_END .)


state 31

    (14) body -> TOKEN_LBRACE dec_statements . TOKEN_RBRACE

    TOKEN_RBRACE    shift and go to state 51


state 32

    (15) dec_statements -> statement . dec_statements
    (15) dec_statements -> . statement dec_statements
    (16) dec_statements -> . empty
    (17) statement -> . assign
    (18) statement -> . condition
    (19) statement -> . cycle
    (20) statement -> . f_call
    (21) statement -> . print
    (72) empty -> .
    (71) assign -> . TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLON
    (29) condition -> . TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN body else TOKEN_SEMICOLON
    (28) cycle -> . TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON
    (66) f_call -> . TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLON
    (22) print -> . TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLON

    TOKEN_RBRACE    reduce using rule 72 (empty -> .)
    TOKEN_ID        shift and go to state 39
    TOKEN_IF        shift and go to state 40
    TOKEN_WHILE     shift and go to state 41
    TOKEN_PRINT     shift and go to state 42

    statement                      shift and go to state 32
    dec_statements                 shift and go to state 52
    empty                          shift and go to state 33
    assign                         shift and go to state 34
    condition                      shift and go to state 35
    cycle                          shift and go to state 36
    f_call                         shift and go to state 37
    print                          shift and go to state 38

state 33

    (16) dec_statements -> empty .

    TOKEN_RBRACE    reduce using rule 16 (dec_statements -> empty .)


state 34

    (17) statement -> assign .

    TOKEN_ID        reduce using rule 17 (statement -> assign .)
    TOKEN_IF        reduce using rule 17 (statement -> assign .)
    TOKEN_WHILE     reduce using rule 17 (statement -> assign .)
    TOKEN_PRINT     reduce using rule 17 (statement -> assign .)
    TOKEN_RBRACE    reduce using rule 17 (statement -> assign .)


state 35

    (18) statement -> condition .

    TOKEN_ID        reduce using rule 18 (statement -> condition .)
    TOKEN_IF        reduce using rule 18 (statement -> condition .)
    TOKEN_WHILE     reduce using rule 18 (statement -> condition .)
    TOKEN_PRINT     reduce using rule 18 (statement -> condition .)
    TOKEN_RBRACE    reduce using rule 18 (statement -> condition .)


state 36

    (19) statement -> cycle .

    TOKEN_ID        reduce using rule 19 (statement -> cycle .)
    TOKEN_IF        reduce using rule 19 (statement -> cycle .)
    TOKEN_WHILE     reduce using rule 19 (statement -> cycle .)
    TOKEN_PRINT     reduce using rule 19 (statement -> cycle .)
    TOKEN_RBRACE    reduce using rule 19 (statement -> cycle .)


state 37

    (20) statement -> f_call .

    TOKEN_ID        reduce using rule 20 (statement -> f_call .)
    TOKEN_IF        reduce using rule 20 (statement -> f_call .)
    TOKEN_WHILE     reduce using rule 20 (statement -> f_call .)
    TOKEN_PRINT     reduce using rule 20 (statement -> f_call .)
    TOKEN_RBRACE    reduce using rule 20 (statement -> f_call .)


state 38

    (21) statement -> print .

    TOKEN_ID        reduce using rule 21 (statement -> print .)
    TOKEN_IF        reduce using rule 21 (statement -> print .)
    TOKEN_WHILE     reduce using rule 21 (statement -> print .)
    TOKEN_PRINT     reduce using rule 21 (statement -> print .)
    TOKEN_RBRACE    reduce using rule 21 (statement -> print .)


state 39

    (71) assign -> TOKEN_ID . TOKEN_ASSIGN expresion TOKEN_SEMICOLON
    (66) f_call -> TOKEN_ID . TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLON

    TOKEN_ASSIGN    shift and go to state 53
    TOKEN_LPAREN    shift and go to state 54


state 40

    (29) condition -> TOKEN_IF . TOKEN_LPAREN expresion TOKEN_RPAREN body else TOKEN_SEMICOLON

    TOKEN_LPAREN    shift and go to state 55


state 41

    (28) cycle -> TOKEN_WHILE . TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON

    TOKEN_LPAREN    shift and go to state 56


state 42

    (22) print -> TOKEN_PRINT . TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLON

    TOKEN_LPAREN    shift and go to state 57


state 43

    (61) def_tipo -> TOKEN_ID . TOKEN_COLON type coma

    TOKEN_COLON     shift and go to state 58


state 44

    (58) funcs -> TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo . TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL TOKEN_SEMICOLON

    TOKEN_RPAREN    shift and go to state 59


state 45

    (59) tipo -> def_tipo .

    TOKEN_RPAREN    reduce using rule 59 (tipo -> def_tipo .)


state 46

    (60) tipo -> empty .

    TOKEN_RPAREN    reduce using rule 60 (tipo -> empty .)


state 47

    (9) variable -> TOKEN_ID mas_ids TOKEN_COLON type . TOKEN_SEMICOLON

    TOKEN_SEMICOLON shift and go to state 60


state 48

    (12) type -> TOKEN_INT .

    TOKEN_SEMICOLON reduce using rule 12 (type -> TOKEN_INT .)
    TOKEN_COMMA     reduce using rule 12 (type -> TOKEN_INT .)
    TOKEN_RPAREN    reduce using rule 12 (type -> TOKEN_INT .)


state 49

    (13) type -> TOKEN_FLOAT .

    TOKEN_SEMICOLON reduce using rule 13 (type -> TOKEN_FLOAT .)
    TOKEN_COMMA     reduce using rule 13 (type -> TOKEN_FLOAT .)
    TOKEN_RPAREN    reduce using rule 13 (type -> TOKEN_FLOAT .)


state 50

    (10) mas_ids -> TOKEN_COMMA TOKEN_ID mas_ids .

    TOKEN_COLON     reduce using rule 10 (mas_ids -> TOKEN_COMMA TOKEN_ID mas_ids .)


state 51

    (14) body -> TOKEN_LBRACE dec_statements TOKEN_RBRACE .

    TOKEN_END       reduce using rule 14 (body -> TOKEN_LBRACE dec_statements TOKEN_RBRACE .)
    TOKEN_ELSE      reduce using rule 14 (body -> TOKEN_LBRACE dec_statements TOKEN_RBRACE .)
    TOKEN_SEMICOLON reduce using rule 14 (body -> TOKEN_LBRACE dec_statements TOKEN_RBRACE .)
    TOKEN_RCOL      reduce using rule 14 (body -> TOKEN_LBRACE dec_statements TOKEN_RBRACE .)


state 52

    (15) dec_statements -> statement dec_statements .

    TOKEN_RBRACE    reduce using rule 15 (dec_statements -> statement dec_statements .)


state 53

    (71) assign -> TOKEN_ID TOKEN_ASSIGN . expresion TOKEN_SEMICOLON
    (34) expresion -> . exp comparar
    (40) exp -> . termino suma_resta
    (44) termino -> . factor multi_div
    (49) factor -> . definicion
    (50) factor -> . operaciones
    (51) definicion -> . TOKEN_LPAREN expresion TOKEN_RPAREN
    (52) operaciones -> . opciones_mas_menos id_cte
    (53) opciones_mas_menos -> . TOKEN_PLUS
    (54) opciones_mas_menos -> . TOKEN_MINUS
    (55) opciones_mas_menos -> . empty
    (72) empty -> .

    TOKEN_LPAREN    shift and go to state 67
    TOKEN_PLUS      shift and go to state 69
    TOKEN_MINUS     shift and go to state 70
    TOKEN_ID        reduce using rule 72 (empty -> .)
    TOKEN_CTE_INT   reduce using rule 72 (empty -> .)
    TOKEN_CTE_FLOAT reduce using rule 72 (empty -> .)

    expresion                      shift and go to state 61
    exp                            shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    definicion                     shift and go to state 65
    operaciones                    shift and go to state 66
    opciones_mas_menos             shift and go to state 68
    empty                          shift and go to state 71

state 54

    (66) f_call -> TOKEN_ID TOKEN_LPAREN . def_exp TOKEN_RPAREN TOKEN_SEMICOLON
    (67) def_exp -> . expresion coma2
    (68) def_exp -> . empty
    (34) expresion -> . exp comparar
    (72) empty -> .
    (40) exp -> . termino suma_resta
    (44) termino -> . factor multi_div
    (49) factor -> . definicion
    (50) factor -> . operaciones
    (51) definicion -> . TOKEN_LPAREN expresion TOKEN_RPAREN
    (52) operaciones -> . opciones_mas_menos id_cte
    (53) opciones_mas_menos -> . TOKEN_PLUS
    (54) opciones_mas_menos -> . TOKEN_MINUS
    (55) opciones_mas_menos -> . empty

    TOKEN_RPAREN    reduce using rule 72 (empty -> .)
    TOKEN_ID        reduce using rule 72 (empty -> .)
    TOKEN_CTE_INT   reduce using rule 72 (empty -> .)
    TOKEN_CTE_FLOAT reduce using rule 72 (empty -> .)
    TOKEN_LPAREN    shift and go to state 67
    TOKEN_PLUS      shift and go to state 69
    TOKEN_MINUS     shift and go to state 70

    def_exp                        shift and go to state 72
    expresion                      shift and go to state 73
    empty                          shift and go to state 74
    exp                            shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    definicion                     shift and go to state 65
    operaciones                    shift and go to state 66
    opciones_mas_menos             shift and go to state 68

state 55

    (29) condition -> TOKEN_IF TOKEN_LPAREN . expresion TOKEN_RPAREN body else TOKEN_SEMICOLON
    (34) expresion -> . exp comparar
    (40) exp -> . termino suma_resta
    (44) termino -> . factor multi_div
    (49) factor -> . definicion
    (50) factor -> . operaciones
    (51) definicion -> . TOKEN_LPAREN expresion TOKEN_RPAREN
    (52) operaciones -> . opciones_mas_menos id_cte
    (53) opciones_mas_menos -> . TOKEN_PLUS
    (54) opciones_mas_menos -> . TOKEN_MINUS
    (55) opciones_mas_menos -> . empty
    (72) empty -> .

    TOKEN_LPAREN    shift and go to state 67
    TOKEN_PLUS      shift and go to state 69
    TOKEN_MINUS     shift and go to state 70
    TOKEN_ID        reduce using rule 72 (empty -> .)
    TOKEN_CTE_INT   reduce using rule 72 (empty -> .)
    TOKEN_CTE_FLOAT reduce using rule 72 (empty -> .)

    expresion                      shift and go to state 75
    exp                            shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    definicion                     shift and go to state 65
    operaciones                    shift and go to state 66
    opciones_mas_menos             shift and go to state 68
    empty                          shift and go to state 71

state 56

    (28) cycle -> TOKEN_WHILE TOKEN_LPAREN . expresion TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON
    (34) expresion -> . exp comparar
    (40) exp -> . termino suma_resta
    (44) termino -> . factor multi_div
    (49) factor -> . definicion
    (50) factor -> . operaciones
    (51) definicion -> . TOKEN_LPAREN expresion TOKEN_RPAREN
    (52) operaciones -> . opciones_mas_menos id_cte
    (53) opciones_mas_menos -> . TOKEN_PLUS
    (54) opciones_mas_menos -> . TOKEN_MINUS
    (55) opciones_mas_menos -> . empty
    (72) empty -> .

    TOKEN_LPAREN    shift and go to state 67
    TOKEN_PLUS      shift and go to state 69
    TOKEN_MINUS     shift and go to state 70
    TOKEN_ID        reduce using rule 72 (empty -> .)
    TOKEN_CTE_INT   reduce using rule 72 (empty -> .)
    TOKEN_CTE_FLOAT reduce using rule 72 (empty -> .)

    expresion                      shift and go to state 76
    exp                            shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    definicion                     shift and go to state 65
    operaciones                    shift and go to state 66
    opciones_mas_menos             shift and go to state 68
    empty                          shift and go to state 71

state 57

    (22) print -> TOKEN_PRINT TOKEN_LPAREN . expresiones TOKEN_RPAREN TOKEN_SEMICOLON
    (23) expresiones -> . TOKEN_CTE_STRING comas
    (24) expresiones -> . expresion comas
    (34) expresion -> . exp comparar
    (40) exp -> . termino suma_resta
    (44) termino -> . factor multi_div
    (49) factor -> . definicion
    (50) factor -> . operaciones
    (51) definicion -> . TOKEN_LPAREN expresion TOKEN_RPAREN
    (52) operaciones -> . opciones_mas_menos id_cte
    (53) opciones_mas_menos -> . TOKEN_PLUS
    (54) opciones_mas_menos -> . TOKEN_MINUS
    (55) opciones_mas_menos -> . empty
    (72) empty -> .

    TOKEN_CTE_STRING shift and go to state 78
    TOKEN_LPAREN    shift and go to state 67
    TOKEN_PLUS      shift and go to state 69
    TOKEN_MINUS     shift and go to state 70
    TOKEN_ID        reduce using rule 72 (empty -> .)
    TOKEN_CTE_INT   reduce using rule 72 (empty -> .)
    TOKEN_CTE_FLOAT reduce using rule 72 (empty -> .)

    expresiones                    shift and go to state 77
    expresion                      shift and go to state 79
    exp                            shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    definicion                     shift and go to state 65
    operaciones                    shift and go to state 66
    opciones_mas_menos             shift and go to state 68
    empty                          shift and go to state 71

state 58

    (61) def_tipo -> TOKEN_ID TOKEN_COLON . type coma
    (12) type -> . TOKEN_INT
    (13) type -> . TOKEN_FLOAT

    TOKEN_INT       shift and go to state 48
    TOKEN_FLOAT     shift and go to state 49

    type                           shift and go to state 80

state 59

    (58) funcs -> TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN . TOKEN_LCOL var body TOKEN_RCOL TOKEN_SEMICOLON

    TOKEN_LCOL      shift and go to state 81


state 60

    (9) variable -> TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLON .

    TOKEN_ID        reduce using rule 9 (variable -> TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLON .)
    TOKEN_VOID      reduce using rule 9 (variable -> TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLON .)
    TOKEN_MAIN      reduce using rule 9 (variable -> TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLON .)
    TOKEN_LBRACE    reduce using rule 9 (variable -> TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLON .)


state 61

    (71) assign -> TOKEN_ID TOKEN_ASSIGN expresion . TOKEN_SEMICOLON

    TOKEN_SEMICOLON shift and go to state 82


state 62

    (34) expresion -> exp . comparar
    (35) comparar -> . signo exp
    (36) comparar -> . empty
    (37) signo -> . TOKEN_GT
    (38) signo -> . TOKEN_LT
    (39) signo -> . TOKEN_NE
    (72) empty -> .

    TOKEN_GT        shift and go to state 86
    TOKEN_LT        shift and go to state 87
    TOKEN_NE        shift and go to state 88
    TOKEN_SEMICOLON reduce using rule 72 (empty -> .)
    TOKEN_COMMA     reduce using rule 72 (empty -> .)
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    comparar                       shift and go to state 83
    signo                          shift and go to state 84
    empty                          shift and go to state 85

state 63

    (40) exp -> termino . suma_resta
    (41) suma_resta -> . TOKEN_PLUS termino suma_resta
    (42) suma_resta -> . TOKEN_MINUS termino suma_resta
    (43) suma_resta -> . empty
    (72) empty -> .

    TOKEN_PLUS      shift and go to state 90
    TOKEN_MINUS     shift and go to state 91
    TOKEN_GT        reduce using rule 72 (empty -> .)
    TOKEN_LT        reduce using rule 72 (empty -> .)
    TOKEN_NE        reduce using rule 72 (empty -> .)
    TOKEN_SEMICOLON reduce using rule 72 (empty -> .)
    TOKEN_COMMA     reduce using rule 72 (empty -> .)
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    suma_resta                     shift and go to state 89
    empty                          shift and go to state 92

state 64

    (44) termino -> factor . multi_div
    (45) multi_div -> . operacion_mul_div factor multi_div
    (46) multi_div -> . empty
    (47) operacion_mul_div -> . TOKEN_DIV
    (48) operacion_mul_div -> . TOKEN_MULT
    (72) empty -> .

    TOKEN_DIV       shift and go to state 96
    TOKEN_MULT      shift and go to state 97
    TOKEN_PLUS      reduce using rule 72 (empty -> .)
    TOKEN_MINUS     reduce using rule 72 (empty -> .)
    TOKEN_GT        reduce using rule 72 (empty -> .)
    TOKEN_LT        reduce using rule 72 (empty -> .)
    TOKEN_NE        reduce using rule 72 (empty -> .)
    TOKEN_SEMICOLON reduce using rule 72 (empty -> .)
    TOKEN_COMMA     reduce using rule 72 (empty -> .)
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    multi_div                      shift and go to state 93
    operacion_mul_div              shift and go to state 94
    empty                          shift and go to state 95

state 65

    (49) factor -> definicion .

    TOKEN_DIV       reduce using rule 49 (factor -> definicion .)
    TOKEN_MULT      reduce using rule 49 (factor -> definicion .)
    TOKEN_PLUS      reduce using rule 49 (factor -> definicion .)
    TOKEN_MINUS     reduce using rule 49 (factor -> definicion .)
    TOKEN_GT        reduce using rule 49 (factor -> definicion .)
    TOKEN_LT        reduce using rule 49 (factor -> definicion .)
    TOKEN_NE        reduce using rule 49 (factor -> definicion .)
    TOKEN_SEMICOLON reduce using rule 49 (factor -> definicion .)
    TOKEN_COMMA     reduce using rule 49 (factor -> definicion .)
    TOKEN_RPAREN    reduce using rule 49 (factor -> definicion .)


state 66

    (50) factor -> operaciones .

    TOKEN_DIV       reduce using rule 50 (factor -> operaciones .)
    TOKEN_MULT      reduce using rule 50 (factor -> operaciones .)
    TOKEN_PLUS      reduce using rule 50 (factor -> operaciones .)
    TOKEN_MINUS     reduce using rule 50 (factor -> operaciones .)
    TOKEN_GT        reduce using rule 50 (factor -> operaciones .)
    TOKEN_LT        reduce using rule 50 (factor -> operaciones .)
    TOKEN_NE        reduce using rule 50 (factor -> operaciones .)
    TOKEN_SEMICOLON reduce using rule 50 (factor -> operaciones .)
    TOKEN_COMMA     reduce using rule 50 (factor -> operaciones .)
    TOKEN_RPAREN    reduce using rule 50 (factor -> operaciones .)


state 67

    (51) definicion -> TOKEN_LPAREN . expresion TOKEN_RPAREN
    (34) expresion -> . exp comparar
    (40) exp -> . termino suma_resta
    (44) termino -> . factor multi_div
    (49) factor -> . definicion
    (50) factor -> . operaciones
    (51) definicion -> . TOKEN_LPAREN expresion TOKEN_RPAREN
    (52) operaciones -> . opciones_mas_menos id_cte
    (53) opciones_mas_menos -> . TOKEN_PLUS
    (54) opciones_mas_menos -> . TOKEN_MINUS
    (55) opciones_mas_menos -> . empty
    (72) empty -> .

    TOKEN_LPAREN    shift and go to state 67
    TOKEN_PLUS      shift and go to state 69
    TOKEN_MINUS     shift and go to state 70
    TOKEN_ID        reduce using rule 72 (empty -> .)
    TOKEN_CTE_INT   reduce using rule 72 (empty -> .)
    TOKEN_CTE_FLOAT reduce using rule 72 (empty -> .)

    expresion                      shift and go to state 98
    exp                            shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    definicion                     shift and go to state 65
    operaciones                    shift and go to state 66
    opciones_mas_menos             shift and go to state 68
    empty                          shift and go to state 71

state 68

    (52) operaciones -> opciones_mas_menos . id_cte
    (56) id_cte -> . TOKEN_ID
    (57) id_cte -> . cte
    (32) cte -> . TOKEN_CTE_INT
    (33) cte -> . TOKEN_CTE_FLOAT

    TOKEN_ID        shift and go to state 100
    TOKEN_CTE_INT   shift and go to state 102
    TOKEN_CTE_FLOAT shift and go to state 103

    id_cte                         shift and go to state 99
    cte                            shift and go to state 101

state 69

    (53) opciones_mas_menos -> TOKEN_PLUS .

    TOKEN_ID        reduce using rule 53 (opciones_mas_menos -> TOKEN_PLUS .)
    TOKEN_CTE_INT   reduce using rule 53 (opciones_mas_menos -> TOKEN_PLUS .)
    TOKEN_CTE_FLOAT reduce using rule 53 (opciones_mas_menos -> TOKEN_PLUS .)


state 70

    (54) opciones_mas_menos -> TOKEN_MINUS .

    TOKEN_ID        reduce using rule 54 (opciones_mas_menos -> TOKEN_MINUS .)
    TOKEN_CTE_INT   reduce using rule 54 (opciones_mas_menos -> TOKEN_MINUS .)
    TOKEN_CTE_FLOAT reduce using rule 54 (opciones_mas_menos -> TOKEN_MINUS .)


state 71

    (55) opciones_mas_menos -> empty .

    TOKEN_ID        reduce using rule 55 (opciones_mas_menos -> empty .)
    TOKEN_CTE_INT   reduce using rule 55 (opciones_mas_menos -> empty .)
    TOKEN_CTE_FLOAT reduce using rule 55 (opciones_mas_menos -> empty .)


state 72

    (66) f_call -> TOKEN_ID TOKEN_LPAREN def_exp . TOKEN_RPAREN TOKEN_SEMICOLON

    TOKEN_RPAREN    shift and go to state 104


state 73

    (67) def_exp -> expresion . coma2
    (69) coma2 -> . TOKEN_COMMA expresion coma2
    (70) coma2 -> . empty
    (72) empty -> .

    TOKEN_COMMA     shift and go to state 106
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    coma2                          shift and go to state 105
    empty                          shift and go to state 107

state 74

    (68) def_exp -> empty .
    (55) opciones_mas_menos -> empty .

    TOKEN_RPAREN    reduce using rule 68 (def_exp -> empty .)
    TOKEN_ID        reduce using rule 55 (opciones_mas_menos -> empty .)
    TOKEN_CTE_INT   reduce using rule 55 (opciones_mas_menos -> empty .)
    TOKEN_CTE_FLOAT reduce using rule 55 (opciones_mas_menos -> empty .)


state 75

    (29) condition -> TOKEN_IF TOKEN_LPAREN expresion . TOKEN_RPAREN body else TOKEN_SEMICOLON

    TOKEN_RPAREN    shift and go to state 108


state 76

    (28) cycle -> TOKEN_WHILE TOKEN_LPAREN expresion . TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON

    TOKEN_RPAREN    shift and go to state 109


state 77

    (22) print -> TOKEN_PRINT TOKEN_LPAREN expresiones . TOKEN_RPAREN TOKEN_SEMICOLON

    TOKEN_RPAREN    shift and go to state 110


state 78

    (23) expresiones -> TOKEN_CTE_STRING . comas
    (25) comas -> . TOKEN_COMMA expresion comas
    (26) comas -> . TOKEN_COMMA TOKEN_CTE_STRING comas
    (27) comas -> . empty
    (72) empty -> .

    TOKEN_COMMA     shift and go to state 112
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    comas                          shift and go to state 111
    empty                          shift and go to state 113

state 79

    (24) expresiones -> expresion . comas
    (25) comas -> . TOKEN_COMMA expresion comas
    (26) comas -> . TOKEN_COMMA TOKEN_CTE_STRING comas
    (27) comas -> . empty
    (72) empty -> .

    TOKEN_COMMA     shift and go to state 112
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    comas                          shift and go to state 114
    empty                          shift and go to state 113

state 80

    (61) def_tipo -> TOKEN_ID TOKEN_COLON type . coma
    (62) coma -> . TOKEN_COMMA TOKEN_ID TOKEN_COLON type coma
    (63) coma -> . empty
    (72) empty -> .

    TOKEN_COMMA     shift and go to state 116
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    coma                           shift and go to state 115
    empty                          shift and go to state 117

state 81

    (58) funcs -> TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL . var body TOKEN_RCOL TOKEN_SEMICOLON
    (64) var -> . vars
    (65) var -> . empty
    (6) vars -> . TOKEN_VAR variable rep_var
    (72) empty -> .

    TOKEN_VAR       shift and go to state 8
    TOKEN_LBRACE    reduce using rule 72 (empty -> .)

    var                            shift and go to state 118
    vars                           shift and go to state 119
    empty                          shift and go to state 120

state 82

    (71) assign -> TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLON .

    TOKEN_ID        reduce using rule 71 (assign -> TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLON .)
    TOKEN_IF        reduce using rule 71 (assign -> TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLON .)
    TOKEN_WHILE     reduce using rule 71 (assign -> TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLON .)
    TOKEN_PRINT     reduce using rule 71 (assign -> TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLON .)
    TOKEN_RBRACE    reduce using rule 71 (assign -> TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLON .)


state 83

    (34) expresion -> exp comparar .

    TOKEN_SEMICOLON reduce using rule 34 (expresion -> exp comparar .)
    TOKEN_COMMA     reduce using rule 34 (expresion -> exp comparar .)
    TOKEN_RPAREN    reduce using rule 34 (expresion -> exp comparar .)


state 84

    (35) comparar -> signo . exp
    (40) exp -> . termino suma_resta
    (44) termino -> . factor multi_div
    (49) factor -> . definicion
    (50) factor -> . operaciones
    (51) definicion -> . TOKEN_LPAREN expresion TOKEN_RPAREN
    (52) operaciones -> . opciones_mas_menos id_cte
    (53) opciones_mas_menos -> . TOKEN_PLUS
    (54) opciones_mas_menos -> . TOKEN_MINUS
    (55) opciones_mas_menos -> . empty
    (72) empty -> .

    TOKEN_LPAREN    shift and go to state 67
    TOKEN_PLUS      shift and go to state 69
    TOKEN_MINUS     shift and go to state 70
    TOKEN_ID        reduce using rule 72 (empty -> .)
    TOKEN_CTE_INT   reduce using rule 72 (empty -> .)
    TOKEN_CTE_FLOAT reduce using rule 72 (empty -> .)

    exp                            shift and go to state 121
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    definicion                     shift and go to state 65
    operaciones                    shift and go to state 66
    opciones_mas_menos             shift and go to state 68
    empty                          shift and go to state 71

state 85

    (36) comparar -> empty .

    TOKEN_SEMICOLON reduce using rule 36 (comparar -> empty .)
    TOKEN_COMMA     reduce using rule 36 (comparar -> empty .)
    TOKEN_RPAREN    reduce using rule 36 (comparar -> empty .)


state 86

    (37) signo -> TOKEN_GT .

    TOKEN_LPAREN    reduce using rule 37 (signo -> TOKEN_GT .)
    TOKEN_PLUS      reduce using rule 37 (signo -> TOKEN_GT .)
    TOKEN_MINUS     reduce using rule 37 (signo -> TOKEN_GT .)
    TOKEN_ID        reduce using rule 37 (signo -> TOKEN_GT .)
    TOKEN_CTE_INT   reduce using rule 37 (signo -> TOKEN_GT .)
    TOKEN_CTE_FLOAT reduce using rule 37 (signo -> TOKEN_GT .)


state 87

    (38) signo -> TOKEN_LT .

    TOKEN_LPAREN    reduce using rule 38 (signo -> TOKEN_LT .)
    TOKEN_PLUS      reduce using rule 38 (signo -> TOKEN_LT .)
    TOKEN_MINUS     reduce using rule 38 (signo -> TOKEN_LT .)
    TOKEN_ID        reduce using rule 38 (signo -> TOKEN_LT .)
    TOKEN_CTE_INT   reduce using rule 38 (signo -> TOKEN_LT .)
    TOKEN_CTE_FLOAT reduce using rule 38 (signo -> TOKEN_LT .)


state 88

    (39) signo -> TOKEN_NE .

    TOKEN_LPAREN    reduce using rule 39 (signo -> TOKEN_NE .)
    TOKEN_PLUS      reduce using rule 39 (signo -> TOKEN_NE .)
    TOKEN_MINUS     reduce using rule 39 (signo -> TOKEN_NE .)
    TOKEN_ID        reduce using rule 39 (signo -> TOKEN_NE .)
    TOKEN_CTE_INT   reduce using rule 39 (signo -> TOKEN_NE .)
    TOKEN_CTE_FLOAT reduce using rule 39 (signo -> TOKEN_NE .)


state 89

    (40) exp -> termino suma_resta .

    TOKEN_GT        reduce using rule 40 (exp -> termino suma_resta .)
    TOKEN_LT        reduce using rule 40 (exp -> termino suma_resta .)
    TOKEN_NE        reduce using rule 40 (exp -> termino suma_resta .)
    TOKEN_SEMICOLON reduce using rule 40 (exp -> termino suma_resta .)
    TOKEN_COMMA     reduce using rule 40 (exp -> termino suma_resta .)
    TOKEN_RPAREN    reduce using rule 40 (exp -> termino suma_resta .)


state 90

    (41) suma_resta -> TOKEN_PLUS . termino suma_resta
    (44) termino -> . factor multi_div
    (49) factor -> . definicion
    (50) factor -> . operaciones
    (51) definicion -> . TOKEN_LPAREN expresion TOKEN_RPAREN
    (52) operaciones -> . opciones_mas_menos id_cte
    (53) opciones_mas_menos -> . TOKEN_PLUS
    (54) opciones_mas_menos -> . TOKEN_MINUS
    (55) opciones_mas_menos -> . empty
    (72) empty -> .

    TOKEN_LPAREN    shift and go to state 67
    TOKEN_PLUS      shift and go to state 69
    TOKEN_MINUS     shift and go to state 70
    TOKEN_ID        reduce using rule 72 (empty -> .)
    TOKEN_CTE_INT   reduce using rule 72 (empty -> .)
    TOKEN_CTE_FLOAT reduce using rule 72 (empty -> .)

    termino                        shift and go to state 122
    factor                         shift and go to state 64
    definicion                     shift and go to state 65
    operaciones                    shift and go to state 66
    opciones_mas_menos             shift and go to state 68
    empty                          shift and go to state 71

state 91

    (42) suma_resta -> TOKEN_MINUS . termino suma_resta
    (44) termino -> . factor multi_div
    (49) factor -> . definicion
    (50) factor -> . operaciones
    (51) definicion -> . TOKEN_LPAREN expresion TOKEN_RPAREN
    (52) operaciones -> . opciones_mas_menos id_cte
    (53) opciones_mas_menos -> . TOKEN_PLUS
    (54) opciones_mas_menos -> . TOKEN_MINUS
    (55) opciones_mas_menos -> . empty
    (72) empty -> .

    TOKEN_LPAREN    shift and go to state 67
    TOKEN_PLUS      shift and go to state 69
    TOKEN_MINUS     shift and go to state 70
    TOKEN_ID        reduce using rule 72 (empty -> .)
    TOKEN_CTE_INT   reduce using rule 72 (empty -> .)
    TOKEN_CTE_FLOAT reduce using rule 72 (empty -> .)

    termino                        shift and go to state 123
    factor                         shift and go to state 64
    definicion                     shift and go to state 65
    operaciones                    shift and go to state 66
    opciones_mas_menos             shift and go to state 68
    empty                          shift and go to state 71

state 92

    (43) suma_resta -> empty .

    TOKEN_GT        reduce using rule 43 (suma_resta -> empty .)
    TOKEN_LT        reduce using rule 43 (suma_resta -> empty .)
    TOKEN_NE        reduce using rule 43 (suma_resta -> empty .)
    TOKEN_SEMICOLON reduce using rule 43 (suma_resta -> empty .)
    TOKEN_COMMA     reduce using rule 43 (suma_resta -> empty .)
    TOKEN_RPAREN    reduce using rule 43 (suma_resta -> empty .)


state 93

    (44) termino -> factor multi_div .

    TOKEN_PLUS      reduce using rule 44 (termino -> factor multi_div .)
    TOKEN_MINUS     reduce using rule 44 (termino -> factor multi_div .)
    TOKEN_GT        reduce using rule 44 (termino -> factor multi_div .)
    TOKEN_LT        reduce using rule 44 (termino -> factor multi_div .)
    TOKEN_NE        reduce using rule 44 (termino -> factor multi_div .)
    TOKEN_SEMICOLON reduce using rule 44 (termino -> factor multi_div .)
    TOKEN_COMMA     reduce using rule 44 (termino -> factor multi_div .)
    TOKEN_RPAREN    reduce using rule 44 (termino -> factor multi_div .)


state 94

    (45) multi_div -> operacion_mul_div . factor multi_div
    (49) factor -> . definicion
    (50) factor -> . operaciones
    (51) definicion -> . TOKEN_LPAREN expresion TOKEN_RPAREN
    (52) operaciones -> . opciones_mas_menos id_cte
    (53) opciones_mas_menos -> . TOKEN_PLUS
    (54) opciones_mas_menos -> . TOKEN_MINUS
    (55) opciones_mas_menos -> . empty
    (72) empty -> .

    TOKEN_LPAREN    shift and go to state 67
    TOKEN_PLUS      shift and go to state 69
    TOKEN_MINUS     shift and go to state 70
    TOKEN_ID        reduce using rule 72 (empty -> .)
    TOKEN_CTE_INT   reduce using rule 72 (empty -> .)
    TOKEN_CTE_FLOAT reduce using rule 72 (empty -> .)

    factor                         shift and go to state 124
    definicion                     shift and go to state 65
    operaciones                    shift and go to state 66
    opciones_mas_menos             shift and go to state 68
    empty                          shift and go to state 71

state 95

    (46) multi_div -> empty .

    TOKEN_PLUS      reduce using rule 46 (multi_div -> empty .)
    TOKEN_MINUS     reduce using rule 46 (multi_div -> empty .)
    TOKEN_GT        reduce using rule 46 (multi_div -> empty .)
    TOKEN_LT        reduce using rule 46 (multi_div -> empty .)
    TOKEN_NE        reduce using rule 46 (multi_div -> empty .)
    TOKEN_SEMICOLON reduce using rule 46 (multi_div -> empty .)
    TOKEN_COMMA     reduce using rule 46 (multi_div -> empty .)
    TOKEN_RPAREN    reduce using rule 46 (multi_div -> empty .)


state 96

    (47) operacion_mul_div -> TOKEN_DIV .

    TOKEN_LPAREN    reduce using rule 47 (operacion_mul_div -> TOKEN_DIV .)
    TOKEN_PLUS      reduce using rule 47 (operacion_mul_div -> TOKEN_DIV .)
    TOKEN_MINUS     reduce using rule 47 (operacion_mul_div -> TOKEN_DIV .)
    TOKEN_ID        reduce using rule 47 (operacion_mul_div -> TOKEN_DIV .)
    TOKEN_CTE_INT   reduce using rule 47 (operacion_mul_div -> TOKEN_DIV .)
    TOKEN_CTE_FLOAT reduce using rule 47 (operacion_mul_div -> TOKEN_DIV .)


state 97

    (48) operacion_mul_div -> TOKEN_MULT .

    TOKEN_LPAREN    reduce using rule 48 (operacion_mul_div -> TOKEN_MULT .)
    TOKEN_PLUS      reduce using rule 48 (operacion_mul_div -> TOKEN_MULT .)
    TOKEN_MINUS     reduce using rule 48 (operacion_mul_div -> TOKEN_MULT .)
    TOKEN_ID        reduce using rule 48 (operacion_mul_div -> TOKEN_MULT .)
    TOKEN_CTE_INT   reduce using rule 48 (operacion_mul_div -> TOKEN_MULT .)
    TOKEN_CTE_FLOAT reduce using rule 48 (operacion_mul_div -> TOKEN_MULT .)


state 98

    (51) definicion -> TOKEN_LPAREN expresion . TOKEN_RPAREN

    TOKEN_RPAREN    shift and go to state 125


state 99

    (52) operaciones -> opciones_mas_menos id_cte .

    TOKEN_DIV       reduce using rule 52 (operaciones -> opciones_mas_menos id_cte .)
    TOKEN_MULT      reduce using rule 52 (operaciones -> opciones_mas_menos id_cte .)
    TOKEN_PLUS      reduce using rule 52 (operaciones -> opciones_mas_menos id_cte .)
    TOKEN_MINUS     reduce using rule 52 (operaciones -> opciones_mas_menos id_cte .)
    TOKEN_GT        reduce using rule 52 (operaciones -> opciones_mas_menos id_cte .)
    TOKEN_LT        reduce using rule 52 (operaciones -> opciones_mas_menos id_cte .)
    TOKEN_NE        reduce using rule 52 (operaciones -> opciones_mas_menos id_cte .)
    TOKEN_SEMICOLON reduce using rule 52 (operaciones -> opciones_mas_menos id_cte .)
    TOKEN_COMMA     reduce using rule 52 (operaciones -> opciones_mas_menos id_cte .)
    TOKEN_RPAREN    reduce using rule 52 (operaciones -> opciones_mas_menos id_cte .)


state 100

    (56) id_cte -> TOKEN_ID .

    TOKEN_DIV       reduce using rule 56 (id_cte -> TOKEN_ID .)
    TOKEN_MULT      reduce using rule 56 (id_cte -> TOKEN_ID .)
    TOKEN_PLUS      reduce using rule 56 (id_cte -> TOKEN_ID .)
    TOKEN_MINUS     reduce using rule 56 (id_cte -> TOKEN_ID .)
    TOKEN_GT        reduce using rule 56 (id_cte -> TOKEN_ID .)
    TOKEN_LT        reduce using rule 56 (id_cte -> TOKEN_ID .)
    TOKEN_NE        reduce using rule 56 (id_cte -> TOKEN_ID .)
    TOKEN_SEMICOLON reduce using rule 56 (id_cte -> TOKEN_ID .)
    TOKEN_COMMA     reduce using rule 56 (id_cte -> TOKEN_ID .)
    TOKEN_RPAREN    reduce using rule 56 (id_cte -> TOKEN_ID .)


state 101

    (57) id_cte -> cte .

    TOKEN_DIV       reduce using rule 57 (id_cte -> cte .)
    TOKEN_MULT      reduce using rule 57 (id_cte -> cte .)
    TOKEN_PLUS      reduce using rule 57 (id_cte -> cte .)
    TOKEN_MINUS     reduce using rule 57 (id_cte -> cte .)
    TOKEN_GT        reduce using rule 57 (id_cte -> cte .)
    TOKEN_LT        reduce using rule 57 (id_cte -> cte .)
    TOKEN_NE        reduce using rule 57 (id_cte -> cte .)
    TOKEN_SEMICOLON reduce using rule 57 (id_cte -> cte .)
    TOKEN_COMMA     reduce using rule 57 (id_cte -> cte .)
    TOKEN_RPAREN    reduce using rule 57 (id_cte -> cte .)


state 102

    (32) cte -> TOKEN_CTE_INT .

    TOKEN_DIV       reduce using rule 32 (cte -> TOKEN_CTE_INT .)
    TOKEN_MULT      reduce using rule 32 (cte -> TOKEN_CTE_INT .)
    TOKEN_PLUS      reduce using rule 32 (cte -> TOKEN_CTE_INT .)
    TOKEN_MINUS     reduce using rule 32 (cte -> TOKEN_CTE_INT .)
    TOKEN_GT        reduce using rule 32 (cte -> TOKEN_CTE_INT .)
    TOKEN_LT        reduce using rule 32 (cte -> TOKEN_CTE_INT .)
    TOKEN_NE        reduce using rule 32 (cte -> TOKEN_CTE_INT .)
    TOKEN_SEMICOLON reduce using rule 32 (cte -> TOKEN_CTE_INT .)
    TOKEN_COMMA     reduce using rule 32 (cte -> TOKEN_CTE_INT .)
    TOKEN_RPAREN    reduce using rule 32 (cte -> TOKEN_CTE_INT .)


state 103

    (33) cte -> TOKEN_CTE_FLOAT .

    TOKEN_DIV       reduce using rule 33 (cte -> TOKEN_CTE_FLOAT .)
    TOKEN_MULT      reduce using rule 33 (cte -> TOKEN_CTE_FLOAT .)
    TOKEN_PLUS      reduce using rule 33 (cte -> TOKEN_CTE_FLOAT .)
    TOKEN_MINUS     reduce using rule 33 (cte -> TOKEN_CTE_FLOAT .)
    TOKEN_GT        reduce using rule 33 (cte -> TOKEN_CTE_FLOAT .)
    TOKEN_LT        reduce using rule 33 (cte -> TOKEN_CTE_FLOAT .)
    TOKEN_NE        reduce using rule 33 (cte -> TOKEN_CTE_FLOAT .)
    TOKEN_SEMICOLON reduce using rule 33 (cte -> TOKEN_CTE_FLOAT .)
    TOKEN_COMMA     reduce using rule 33 (cte -> TOKEN_CTE_FLOAT .)
    TOKEN_RPAREN    reduce using rule 33 (cte -> TOKEN_CTE_FLOAT .)


state 104

    (66) f_call -> TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN . TOKEN_SEMICOLON

    TOKEN_SEMICOLON shift and go to state 126


state 105

    (67) def_exp -> expresion coma2 .

    TOKEN_RPAREN    reduce using rule 67 (def_exp -> expresion coma2 .)


state 106

    (69) coma2 -> TOKEN_COMMA . expresion coma2
    (34) expresion -> . exp comparar
    (40) exp -> . termino suma_resta
    (44) termino -> . factor multi_div
    (49) factor -> . definicion
    (50) factor -> . operaciones
    (51) definicion -> . TOKEN_LPAREN expresion TOKEN_RPAREN
    (52) operaciones -> . opciones_mas_menos id_cte
    (53) opciones_mas_menos -> . TOKEN_PLUS
    (54) opciones_mas_menos -> . TOKEN_MINUS
    (55) opciones_mas_menos -> . empty
    (72) empty -> .

    TOKEN_LPAREN    shift and go to state 67
    TOKEN_PLUS      shift and go to state 69
    TOKEN_MINUS     shift and go to state 70
    TOKEN_ID        reduce using rule 72 (empty -> .)
    TOKEN_CTE_INT   reduce using rule 72 (empty -> .)
    TOKEN_CTE_FLOAT reduce using rule 72 (empty -> .)

    expresion                      shift and go to state 127
    exp                            shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    definicion                     shift and go to state 65
    operaciones                    shift and go to state 66
    opciones_mas_menos             shift and go to state 68
    empty                          shift and go to state 71

state 107

    (70) coma2 -> empty .

    TOKEN_RPAREN    reduce using rule 70 (coma2 -> empty .)


state 108

    (29) condition -> TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN . body else TOKEN_SEMICOLON
    (14) body -> . TOKEN_LBRACE dec_statements TOKEN_RBRACE

    TOKEN_LBRACE    shift and go to state 25

    body                           shift and go to state 128

state 109

    (28) cycle -> TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN . TOKEN_DO body TOKEN_SEMICOLON

    TOKEN_DO        shift and go to state 129


state 110

    (22) print -> TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN . TOKEN_SEMICOLON

    TOKEN_SEMICOLON shift and go to state 130


state 111

    (23) expresiones -> TOKEN_CTE_STRING comas .

    TOKEN_RPAREN    reduce using rule 23 (expresiones -> TOKEN_CTE_STRING comas .)


state 112

    (25) comas -> TOKEN_COMMA . expresion comas
    (26) comas -> TOKEN_COMMA . TOKEN_CTE_STRING comas
    (34) expresion -> . exp comparar
    (40) exp -> . termino suma_resta
    (44) termino -> . factor multi_div
    (49) factor -> . definicion
    (50) factor -> . operaciones
    (51) definicion -> . TOKEN_LPAREN expresion TOKEN_RPAREN
    (52) operaciones -> . opciones_mas_menos id_cte
    (53) opciones_mas_menos -> . TOKEN_PLUS
    (54) opciones_mas_menos -> . TOKEN_MINUS
    (55) opciones_mas_menos -> . empty
    (72) empty -> .

    TOKEN_CTE_STRING shift and go to state 132
    TOKEN_LPAREN    shift and go to state 67
    TOKEN_PLUS      shift and go to state 69
    TOKEN_MINUS     shift and go to state 70
    TOKEN_ID        reduce using rule 72 (empty -> .)
    TOKEN_CTE_INT   reduce using rule 72 (empty -> .)
    TOKEN_CTE_FLOAT reduce using rule 72 (empty -> .)

    expresion                      shift and go to state 131
    exp                            shift and go to state 62
    termino                        shift and go to state 63
    factor                         shift and go to state 64
    definicion                     shift and go to state 65
    operaciones                    shift and go to state 66
    opciones_mas_menos             shift and go to state 68
    empty                          shift and go to state 71

state 113

    (27) comas -> empty .

    TOKEN_RPAREN    reduce using rule 27 (comas -> empty .)


state 114

    (24) expresiones -> expresion comas .

    TOKEN_RPAREN    reduce using rule 24 (expresiones -> expresion comas .)


state 115

    (61) def_tipo -> TOKEN_ID TOKEN_COLON type coma .

    TOKEN_RPAREN    reduce using rule 61 (def_tipo -> TOKEN_ID TOKEN_COLON type coma .)


state 116

    (62) coma -> TOKEN_COMMA . TOKEN_ID TOKEN_COLON type coma

    TOKEN_ID        shift and go to state 133


state 117

    (63) coma -> empty .

    TOKEN_RPAREN    reduce using rule 63 (coma -> empty .)


state 118

    (58) funcs -> TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var . body TOKEN_RCOL TOKEN_SEMICOLON
    (14) body -> . TOKEN_LBRACE dec_statements TOKEN_RBRACE

    TOKEN_LBRACE    shift and go to state 25

    body                           shift and go to state 134

state 119

    (64) var -> vars .

    TOKEN_LBRACE    reduce using rule 64 (var -> vars .)


state 120

    (65) var -> empty .

    TOKEN_LBRACE    reduce using rule 65 (var -> empty .)


state 121

    (35) comparar -> signo exp .

    TOKEN_SEMICOLON reduce using rule 35 (comparar -> signo exp .)
    TOKEN_COMMA     reduce using rule 35 (comparar -> signo exp .)
    TOKEN_RPAREN    reduce using rule 35 (comparar -> signo exp .)


state 122

    (41) suma_resta -> TOKEN_PLUS termino . suma_resta
    (41) suma_resta -> . TOKEN_PLUS termino suma_resta
    (42) suma_resta -> . TOKEN_MINUS termino suma_resta
    (43) suma_resta -> . empty
    (72) empty -> .

    TOKEN_PLUS      shift and go to state 90
    TOKEN_MINUS     shift and go to state 91
    TOKEN_GT        reduce using rule 72 (empty -> .)
    TOKEN_LT        reduce using rule 72 (empty -> .)
    TOKEN_NE        reduce using rule 72 (empty -> .)
    TOKEN_SEMICOLON reduce using rule 72 (empty -> .)
    TOKEN_COMMA     reduce using rule 72 (empty -> .)
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    suma_resta                     shift and go to state 135
    empty                          shift and go to state 92

state 123

    (42) suma_resta -> TOKEN_MINUS termino . suma_resta
    (41) suma_resta -> . TOKEN_PLUS termino suma_resta
    (42) suma_resta -> . TOKEN_MINUS termino suma_resta
    (43) suma_resta -> . empty
    (72) empty -> .

    TOKEN_PLUS      shift and go to state 90
    TOKEN_MINUS     shift and go to state 91
    TOKEN_GT        reduce using rule 72 (empty -> .)
    TOKEN_LT        reduce using rule 72 (empty -> .)
    TOKEN_NE        reduce using rule 72 (empty -> .)
    TOKEN_SEMICOLON reduce using rule 72 (empty -> .)
    TOKEN_COMMA     reduce using rule 72 (empty -> .)
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    suma_resta                     shift and go to state 136
    empty                          shift and go to state 92

state 124

    (45) multi_div -> operacion_mul_div factor . multi_div
    (45) multi_div -> . operacion_mul_div factor multi_div
    (46) multi_div -> . empty
    (47) operacion_mul_div -> . TOKEN_DIV
    (48) operacion_mul_div -> . TOKEN_MULT
    (72) empty -> .

    TOKEN_DIV       shift and go to state 96
    TOKEN_MULT      shift and go to state 97
    TOKEN_PLUS      reduce using rule 72 (empty -> .)
    TOKEN_MINUS     reduce using rule 72 (empty -> .)
    TOKEN_GT        reduce using rule 72 (empty -> .)
    TOKEN_LT        reduce using rule 72 (empty -> .)
    TOKEN_NE        reduce using rule 72 (empty -> .)
    TOKEN_SEMICOLON reduce using rule 72 (empty -> .)
    TOKEN_COMMA     reduce using rule 72 (empty -> .)
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    operacion_mul_div              shift and go to state 94
    multi_div                      shift and go to state 137
    empty                          shift and go to state 95

state 125

    (51) definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN .

    TOKEN_DIV       reduce using rule 51 (definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN .)
    TOKEN_MULT      reduce using rule 51 (definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN .)
    TOKEN_PLUS      reduce using rule 51 (definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN .)
    TOKEN_MINUS     reduce using rule 51 (definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN .)
    TOKEN_GT        reduce using rule 51 (definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN .)
    TOKEN_LT        reduce using rule 51 (definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN .)
    TOKEN_NE        reduce using rule 51 (definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN .)
    TOKEN_SEMICOLON reduce using rule 51 (definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN .)
    TOKEN_COMMA     reduce using rule 51 (definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN .)
    TOKEN_RPAREN    reduce using rule 51 (definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN .)


state 126

    (66) f_call -> TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLON .

    TOKEN_ID        reduce using rule 66 (f_call -> TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLON .)
    TOKEN_IF        reduce using rule 66 (f_call -> TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLON .)
    TOKEN_WHILE     reduce using rule 66 (f_call -> TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLON .)
    TOKEN_PRINT     reduce using rule 66 (f_call -> TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLON .)
    TOKEN_RBRACE    reduce using rule 66 (f_call -> TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLON .)


state 127

    (69) coma2 -> TOKEN_COMMA expresion . coma2
    (69) coma2 -> . TOKEN_COMMA expresion coma2
    (70) coma2 -> . empty
    (72) empty -> .

    TOKEN_COMMA     shift and go to state 106
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    coma2                          shift and go to state 138
    empty                          shift and go to state 107

state 128

    (29) condition -> TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN body . else TOKEN_SEMICOLON
    (30) else -> . TOKEN_ELSE body
    (31) else -> . empty
    (72) empty -> .

    TOKEN_ELSE      shift and go to state 140
    TOKEN_SEMICOLON reduce using rule 72 (empty -> .)

    else                           shift and go to state 139
    empty                          shift and go to state 141

state 129

    (28) cycle -> TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO . body TOKEN_SEMICOLON
    (14) body -> . TOKEN_LBRACE dec_statements TOKEN_RBRACE

    TOKEN_LBRACE    shift and go to state 25

    body                           shift and go to state 142

state 130

    (22) print -> TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLON .

    TOKEN_ID        reduce using rule 22 (print -> TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLON .)
    TOKEN_IF        reduce using rule 22 (print -> TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLON .)
    TOKEN_WHILE     reduce using rule 22 (print -> TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLON .)
    TOKEN_PRINT     reduce using rule 22 (print -> TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLON .)
    TOKEN_RBRACE    reduce using rule 22 (print -> TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLON .)


state 131

    (25) comas -> TOKEN_COMMA expresion . comas
    (25) comas -> . TOKEN_COMMA expresion comas
    (26) comas -> . TOKEN_COMMA TOKEN_CTE_STRING comas
    (27) comas -> . empty
    (72) empty -> .

    TOKEN_COMMA     shift and go to state 112
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    comas                          shift and go to state 143
    empty                          shift and go to state 113

state 132

    (26) comas -> TOKEN_COMMA TOKEN_CTE_STRING . comas
    (25) comas -> . TOKEN_COMMA expresion comas
    (26) comas -> . TOKEN_COMMA TOKEN_CTE_STRING comas
    (27) comas -> . empty
    (72) empty -> .

    TOKEN_COMMA     shift and go to state 112
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    comas                          shift and go to state 144
    empty                          shift and go to state 113

state 133

    (62) coma -> TOKEN_COMMA TOKEN_ID . TOKEN_COLON type coma

    TOKEN_COLON     shift and go to state 145


state 134

    (58) funcs -> TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body . TOKEN_RCOL TOKEN_SEMICOLON

    TOKEN_RCOL      shift and go to state 146


state 135

    (41) suma_resta -> TOKEN_PLUS termino suma_resta .

    TOKEN_GT        reduce using rule 41 (suma_resta -> TOKEN_PLUS termino suma_resta .)
    TOKEN_LT        reduce using rule 41 (suma_resta -> TOKEN_PLUS termino suma_resta .)
    TOKEN_NE        reduce using rule 41 (suma_resta -> TOKEN_PLUS termino suma_resta .)
    TOKEN_SEMICOLON reduce using rule 41 (suma_resta -> TOKEN_PLUS termino suma_resta .)
    TOKEN_COMMA     reduce using rule 41 (suma_resta -> TOKEN_PLUS termino suma_resta .)
    TOKEN_RPAREN    reduce using rule 41 (suma_resta -> TOKEN_PLUS termino suma_resta .)


state 136

    (42) suma_resta -> TOKEN_MINUS termino suma_resta .

    TOKEN_GT        reduce using rule 42 (suma_resta -> TOKEN_MINUS termino suma_resta .)
    TOKEN_LT        reduce using rule 42 (suma_resta -> TOKEN_MINUS termino suma_resta .)
    TOKEN_NE        reduce using rule 42 (suma_resta -> TOKEN_MINUS termino suma_resta .)
    TOKEN_SEMICOLON reduce using rule 42 (suma_resta -> TOKEN_MINUS termino suma_resta .)
    TOKEN_COMMA     reduce using rule 42 (suma_resta -> TOKEN_MINUS termino suma_resta .)
    TOKEN_RPAREN    reduce using rule 42 (suma_resta -> TOKEN_MINUS termino suma_resta .)


state 137

    (45) multi_div -> operacion_mul_div factor multi_div .

    TOKEN_PLUS      reduce using rule 45 (multi_div -> operacion_mul_div factor multi_div .)
    TOKEN_MINUS     reduce using rule 45 (multi_div -> operacion_mul_div factor multi_div .)
    TOKEN_GT        reduce using rule 45 (multi_div -> operacion_mul_div factor multi_div .)
    TOKEN_LT        reduce using rule 45 (multi_div -> operacion_mul_div factor multi_div .)
    TOKEN_NE        reduce using rule 45 (multi_div -> operacion_mul_div factor multi_div .)
    TOKEN_SEMICOLON reduce using rule 45 (multi_div -> operacion_mul_div factor multi_div .)
    TOKEN_COMMA     reduce using rule 45 (multi_div -> operacion_mul_div factor multi_div .)
    TOKEN_RPAREN    reduce using rule 45 (multi_div -> operacion_mul_div factor multi_div .)


state 138

    (69) coma2 -> TOKEN_COMMA expresion coma2 .

    TOKEN_RPAREN    reduce using rule 69 (coma2 -> TOKEN_COMMA expresion coma2 .)


state 139

    (29) condition -> TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN body else . TOKEN_SEMICOLON

    TOKEN_SEMICOLON shift and go to state 147


state 140

    (30) else -> TOKEN_ELSE . body
    (14) body -> . TOKEN_LBRACE dec_statements TOKEN_RBRACE

    TOKEN_LBRACE    shift and go to state 25

    body                           shift and go to state 148

state 141

    (31) else -> empty .

    TOKEN_SEMICOLON reduce using rule 31 (else -> empty .)


state 142

    (28) cycle -> TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO body . TOKEN_SEMICOLON

    TOKEN_SEMICOLON shift and go to state 149


state 143

    (25) comas -> TOKEN_COMMA expresion comas .

    TOKEN_RPAREN    reduce using rule 25 (comas -> TOKEN_COMMA expresion comas .)


state 144

    (26) comas -> TOKEN_COMMA TOKEN_CTE_STRING comas .

    TOKEN_RPAREN    reduce using rule 26 (comas -> TOKEN_COMMA TOKEN_CTE_STRING comas .)


state 145

    (62) coma -> TOKEN_COMMA TOKEN_ID TOKEN_COLON . type coma
    (12) type -> . TOKEN_INT
    (13) type -> . TOKEN_FLOAT

    TOKEN_INT       shift and go to state 48
    TOKEN_FLOAT     shift and go to state 49

    type                           shift and go to state 150

state 146

    (58) funcs -> TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL . TOKEN_SEMICOLON

    TOKEN_SEMICOLON shift and go to state 151


state 147

    (29) condition -> TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN body else TOKEN_SEMICOLON .

    TOKEN_ID        reduce using rule 29 (condition -> TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN body else TOKEN_SEMICOLON .)
    TOKEN_IF        reduce using rule 29 (condition -> TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN body else TOKEN_SEMICOLON .)
    TOKEN_WHILE     reduce using rule 29 (condition -> TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN body else TOKEN_SEMICOLON .)
    TOKEN_PRINT     reduce using rule 29 (condition -> TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN body else TOKEN_SEMICOLON .)
    TOKEN_RBRACE    reduce using rule 29 (condition -> TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN body else TOKEN_SEMICOLON .)


state 148

    (30) else -> TOKEN_ELSE body .

    TOKEN_SEMICOLON reduce using rule 30 (else -> TOKEN_ELSE body .)


state 149

    (28) cycle -> TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON .

    TOKEN_ID        reduce using rule 28 (cycle -> TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON .)
    TOKEN_IF        reduce using rule 28 (cycle -> TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON .)
    TOKEN_WHILE     reduce using rule 28 (cycle -> TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON .)
    TOKEN_PRINT     reduce using rule 28 (cycle -> TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON .)
    TOKEN_RBRACE    reduce using rule 28 (cycle -> TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON .)


state 150

    (62) coma -> TOKEN_COMMA TOKEN_ID TOKEN_COLON type . coma
    (62) coma -> . TOKEN_COMMA TOKEN_ID TOKEN_COLON type coma
    (63) coma -> . empty
    (72) empty -> .

    TOKEN_COMMA     shift and go to state 116
    TOKEN_RPAREN    reduce using rule 72 (empty -> .)

    coma                           shift and go to state 152
    empty                          shift and go to state 117

state 151

    (58) funcs -> TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL TOKEN_SEMICOLON .

    TOKEN_VOID      reduce using rule 58 (funcs -> TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL TOKEN_SEMICOLON .)
    TOKEN_MAIN      reduce using rule 58 (funcs -> TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL TOKEN_SEMICOLON .)


state 152

    (62) coma -> TOKEN_COMMA TOKEN_ID TOKEN_COLON type coma .

    TOKEN_RPAREN    reduce using rule 62 (coma -> TOKEN_COMMA TOKEN_ID TOKEN_COLON type coma .)

