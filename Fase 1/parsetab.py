
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'TOKEN_ASSIGN TOKEN_COLON TOKEN_COMMA TOKEN_CTE_FLOAT TOKEN_CTE_INT TOKEN_CTE_STRING TOKEN_DIV TOKEN_DO TOKEN_ELSE TOKEN_END TOKEN_FLOAT TOKEN_GT TOKEN_ID TOKEN_IF TOKEN_INT TOKEN_LBRACE TOKEN_LCOL TOKEN_LPAREN TOKEN_LT TOKEN_MAIN TOKEN_MINUS TOKEN_MULT TOKEN_NE TOKEN_PLUS TOKEN_PRINT TOKEN_PROGRAM TOKEN_RBRACE TOKEN_RCOL TOKEN_RPAREN TOKEN_SEMICOLON TOKEN_VAR TOKEN_VOID TOKEN_WHILEprograma : TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var dec_funcs TOKEN_MAIN body TOKEN_ENDprograma : TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var dec_funcs TOKEN_ENDdec_var : vars\n    | emptydec_funcs : funcs dec_funcs\n    | emptyvars : TOKEN_VAR variable rep_varrep_var  : variable rep_var\n    |  emptyvariable : TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLONmas_ids : TOKEN_COMMA TOKEN_ID mas_ids\n    |  emptytype : TOKEN_INT\n    | TOKEN_FLOATbody : TOKEN_LBRACE dec_statements TOKEN_RBRACEdec_statements : statement dec_statements\n    | emptystatement : assign\n        | condition\n        | cycle\n        | f_call\n        | printprint : TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLONexpresiones : TOKEN_CTE_STRING comas\n    | expresion comascomas : TOKEN_COMMA expresion comas\n    | TOKEN_COMMA TOKEN_CTE_STRING comas\n    | emptysaveQuad : emptyGotoF : emptycycle : TOKEN_WHILE TOKEN_LPAREN saveQuad expresion GotoF TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLONsaveQuadIF : emptyGotoFIF : emptycondition : TOKEN_IF TOKEN_LPAREN expresion saveQuadIF TOKEN_RPAREN body GotoFIF else TOKEN_SEMICOLONelse : TOKEN_ELSE body\n    | emptycte : TOKEN_CTE_INT\n    | TOKEN_CTE_FLOATexpresion : exp compararcomparar  : signo exp\n    | emptysigno : TOKEN_GT\n    | TOKEN_LT\n    | TOKEN_NEexp  : termino suma_restasuma_resta : TOKEN_PLUS termino suma_resta\n    | TOKEN_MINUS termino suma_resta\n    | emptytermino : factor multi_divmulti_div  : operacion_mul_div factor multi_div  \n    | emptyoperacion_mul_div : TOKEN_DIV\n    | TOKEN_MULTfactor : definicion\n    | operacionesdefinicion : TOKEN_LPAREN expresion TOKEN_RPARENoperaciones : opciones_mas_menos id_cteopciones_mas_menos : TOKEN_PLUS\n    | TOKEN_MINUS\n    | emptyid_cte : TOKEN_ID\n    | ctefuncs :  TOKEN_VOID TOKEN_ID scopefun TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL TOKEN_SEMICOLONscopefun : emptytipo : def_tipo\n    | emptydef_tipo : TOKEN_ID TOKEN_COLON type comacoma : TOKEN_COMMA TOKEN_ID TOKEN_COLON type coma\n    | emptyvar : vars \n    | emptyf_call : TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLONdef_exp : expresion coma2\n    | emptycoma2 : TOKEN_COMMA expresion coma2\n    | emptyassign : TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLONempty :'
    
_lr_action_items = {'TOKEN_PROGRAM':([0,],[2,]),'$end':([1,16,32,],[0,-2,-1,]),'TOKEN_ID':([2,8,12,13,19,23,26,34,36,37,38,39,40,45,52,53,54,55,56,61,68,69,70,71,72,75,77,78,84,86,88,89,90,92,93,96,98,99,108,115,125,130,134,160,162,],[3,14,18,14,14,31,41,41,-18,-19,-20,-21,-22,57,-78,-78,-78,-78,-78,-10,-78,102,-58,-59,-60,-60,-78,-29,-77,-78,-42,-43,-44,-78,-78,-78,-52,-53,-78,-78,-72,-23,147,-34,-31,]),'TOKEN_SEMICOLON':([3,46,47,48,50,62,63,64,65,66,67,85,87,91,94,95,97,101,102,103,104,105,106,113,120,121,122,123,124,139,140,141,143,149,150,153,154,156,157,161,],[4,61,-13,-14,-15,84,-78,-78,-78,-54,-55,-39,-41,-45,-48,-49,-51,-57,-61,-62,-37,-38,125,130,-40,-78,-78,-78,-56,-46,-47,-50,-78,-78,-33,159,160,-36,162,-35,]),'TOKEN_VAR':([4,119,],[8,8,]),'TOKEN_VOID':([4,5,6,7,10,13,19,20,21,29,61,159,],[-78,12,-3,-4,12,-78,-78,-7,-9,-8,-10,-63,]),'TOKEN_MAIN':([4,5,6,7,9,10,11,13,17,19,20,21,29,61,159,],[-78,-78,-3,-4,15,-78,-6,-78,-5,-78,-7,-9,-8,-10,-63,]),'TOKEN_END':([4,5,6,7,9,10,11,13,17,19,20,21,25,29,50,61,159,],[-78,-78,-3,-4,16,-78,-6,-78,-5,-78,-7,-9,32,-8,-15,-10,-63,]),'TOKEN_LBRACE':([13,15,19,20,21,29,61,119,127,136,137,138,151,155,],[-78,26,-78,-7,-9,-8,-10,-78,26,26,-70,-71,26,26,]),'TOKEN_COMMA':([14,31,47,48,63,64,65,66,67,74,80,81,85,87,91,94,95,97,101,102,103,104,105,118,120,121,122,123,124,126,131,132,139,140,141,158,],[23,23,-13,-14,-78,-78,-78,-54,-55,108,115,115,-39,-41,-45,-48,-49,-51,-57,-61,-62,-37,-38,134,-40,-78,-78,-78,-56,108,115,115,-46,-47,-50,134,]),'TOKEN_COLON':([14,22,24,31,49,57,147,],[-78,30,-12,-78,-11,82,152,]),'TOKEN_LPAREN':([18,27,28,41,42,43,44,52,53,54,55,56,68,77,78,86,88,89,90,92,93,96,98,99,108,115,],[-78,45,-64,53,54,55,56,68,68,68,-78,68,68,68,-29,68,-42,-43,-44,68,68,68,-52,-53,68,68,]),'TOKEN_RBRACE':([26,33,34,35,36,37,38,39,40,51,84,125,130,160,162,],[-78,50,-78,-17,-18,-19,-20,-21,-22,-16,-77,-72,-23,-34,-31,]),'TOKEN_IF':([26,34,36,37,38,39,40,84,125,130,160,162,],[42,42,-18,-19,-20,-21,-22,-77,-72,-23,-34,-31,]),'TOKEN_WHILE':([26,34,36,37,38,39,40,84,125,130,160,162,],[43,43,-18,-19,-20,-21,-22,-77,-72,-23,-34,-31,]),'TOKEN_PRINT':([26,34,36,37,38,39,40,84,125,130,160,162,],[44,44,-18,-19,-20,-21,-22,-77,-72,-23,-34,-31,]),'TOKEN_INT':([30,82,152,],[47,47,47,]),'TOKEN_FLOAT':([30,82,152,],[48,48,48,]),'TOKEN_ASSIGN':([41,],[52,]),'TOKEN_RPAREN':([45,47,48,53,58,59,60,63,64,65,66,67,73,74,75,76,79,80,81,85,87,91,94,95,97,100,101,102,103,104,105,107,109,110,111,112,114,116,117,118,120,121,122,123,124,126,128,129,131,132,133,135,139,140,141,142,145,146,158,163,],[-78,-13,-14,-78,83,-65,-66,-78,-78,-78,-54,-55,106,-78,-74,-78,113,-78,-78,-39,-41,-45,-48,-49,-51,124,-57,-61,-62,-37,-38,-73,-76,127,-32,-78,-24,-28,-25,-78,-40,-78,-78,-78,-56,-78,144,-30,-78,-78,-67,-69,-46,-47,-50,-75,-26,-27,-78,-68,]),'TOKEN_ELSE':([50,143,149,150,],[-15,-78,155,-33,]),'TOKEN_RCOL':([50,148,],[-15,153,]),'TOKEN_PLUS':([52,53,54,55,56,64,65,66,67,68,77,78,86,88,89,90,92,93,95,96,97,98,99,101,102,103,104,105,108,115,121,122,123,124,141,],[70,70,70,-78,70,92,-78,-54,-55,70,70,-29,70,-42,-43,-44,70,70,-49,70,-51,-52,-53,-57,-61,-62,-37,-38,70,70,92,92,-78,-56,-50,]),'TOKEN_MINUS':([52,53,54,55,56,64,65,66,67,68,77,78,86,88,89,90,92,93,95,96,97,98,99,101,102,103,104,105,108,115,121,122,123,124,141,],[71,71,71,-78,71,93,-78,-54,-55,71,71,-29,71,-42,-43,-44,71,71,-49,71,-51,-52,-53,-57,-61,-62,-37,-38,71,71,93,93,-78,-56,-50,]),'TOKEN_CTE_INT':([52,53,54,55,56,68,69,70,71,72,75,77,78,86,88,89,90,92,93,96,98,99,108,115,],[-78,-78,-78,-78,-78,-78,104,-58,-59,-60,-60,-78,-29,-78,-42,-43,-44,-78,-78,-78,-52,-53,-78,-78,]),'TOKEN_CTE_FLOAT':([52,53,54,55,56,68,69,70,71,72,75,77,78,86,88,89,90,92,93,96,98,99,108,115,],[-78,-78,-78,-78,-78,-78,105,-58,-59,-60,-60,-78,-29,-78,-42,-43,-44,-78,-78,-78,-52,-53,-78,-78,]),'TOKEN_CTE_STRING':([56,115,],[80,132,]),'TOKEN_GT':([63,64,65,66,67,91,94,95,97,101,102,103,104,105,121,122,123,124,139,140,141,],[88,-78,-78,-54,-55,-45,-48,-49,-51,-57,-61,-62,-37,-38,-78,-78,-78,-56,-46,-47,-50,]),'TOKEN_LT':([63,64,65,66,67,91,94,95,97,101,102,103,104,105,121,122,123,124,139,140,141,],[89,-78,-78,-54,-55,-45,-48,-49,-51,-57,-61,-62,-37,-38,-78,-78,-78,-56,-46,-47,-50,]),'TOKEN_NE':([63,64,65,66,67,91,94,95,97,101,102,103,104,105,121,122,123,124,139,140,141,],[90,-78,-78,-54,-55,-45,-48,-49,-51,-57,-61,-62,-37,-38,-78,-78,-78,-56,-46,-47,-50,]),'TOKEN_DIV':([65,66,67,101,102,103,104,105,123,124,],[98,-54,-55,-57,-61,-62,-37,-38,98,-56,]),'TOKEN_MULT':([65,66,67,101,102,103,104,105,123,124,],[99,-54,-55,-57,-61,-62,-37,-38,99,-56,]),'TOKEN_LCOL':([83,],[119,]),'TOKEN_DO':([144,],[151,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'dec_var':([4,],[5,]),'vars':([4,119,],[6,137,]),'empty':([4,5,10,13,14,18,19,26,31,34,45,52,53,54,55,56,63,64,65,68,74,76,77,80,81,86,92,93,96,108,112,115,118,119,121,122,123,126,131,132,143,149,158,],[7,11,11,21,24,28,21,35,24,35,60,72,75,72,78,72,87,94,97,72,109,111,72,116,116,72,72,72,72,72,129,72,135,138,94,94,97,109,116,116,150,156,135,]),'dec_funcs':([5,10,],[9,17,]),'funcs':([5,10,],[10,10,]),'variable':([8,13,19,],[13,19,19,]),'rep_var':([13,19,],[20,29,]),'mas_ids':([14,31,],[22,49,]),'body':([15,127,136,151,155,],[25,143,148,157,161,]),'scopefun':([18,],[27,]),'dec_statements':([26,34,],[33,51,]),'statement':([26,34,],[34,34,]),'assign':([26,34,],[36,36,]),'condition':([26,34,],[37,37,]),'cycle':([26,34,],[38,38,]),'f_call':([26,34,],[39,39,]),'print':([26,34,],[40,40,]),'type':([30,82,152,],[46,118,158,]),'tipo':([45,],[58,]),'def_tipo':([45,],[59,]),'expresion':([52,53,54,56,68,77,108,115,],[62,74,76,81,100,112,126,131,]),'exp':([52,53,54,56,68,77,86,108,115,],[63,63,63,63,63,63,120,63,63,]),'termino':([52,53,54,56,68,77,86,92,93,108,115,],[64,64,64,64,64,64,64,121,122,64,64,]),'factor':([52,53,54,56,68,77,86,92,93,96,108,115,],[65,65,65,65,65,65,65,65,65,123,65,65,]),'definicion':([52,53,54,56,68,77,86,92,93,96,108,115,],[66,66,66,66,66,66,66,66,66,66,66,66,]),'operaciones':([52,53,54,56,68,77,86,92,93,96,108,115,],[67,67,67,67,67,67,67,67,67,67,67,67,]),'opciones_mas_menos':([52,53,54,56,68,77,86,92,93,96,108,115,],[69,69,69,69,69,69,69,69,69,69,69,69,]),'def_exp':([53,],[73,]),'saveQuad':([55,],[77,]),'expresiones':([56,],[79,]),'comparar':([63,],[85,]),'signo':([63,],[86,]),'suma_resta':([64,121,122,],[91,139,140,]),'multi_div':([65,123,],[95,141,]),'operacion_mul_div':([65,123,],[96,96,]),'id_cte':([69,],[101,]),'cte':([69,],[103,]),'coma2':([74,126,],[107,142,]),'saveQuadIF':([76,],[110,]),'comas':([80,81,131,132,],[114,117,145,146,]),'GotoF':([112,],[128,]),'coma':([118,158,],[133,163,]),'var':([119,],[136,]),'GotoFIF':([143,],[149,]),'else':([149,],[154,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var dec_funcs TOKEN_MAIN body TOKEN_END','programa',8,'p_programa','yacc.py',24),
  ('programa -> TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var dec_funcs TOKEN_END','programa',6,'p_programa_error_no_main','yacc.py',33),
  ('dec_var -> vars','dec_var',1,'p_dec_var','yacc.py',40),
  ('dec_var -> empty','dec_var',1,'p_dec_var','yacc.py',41),
  ('dec_funcs -> funcs dec_funcs','dec_funcs',2,'p_dec_funcs','yacc.py',45),
  ('dec_funcs -> empty','dec_funcs',1,'p_dec_funcs','yacc.py',46),
  ('vars -> TOKEN_VAR variable rep_var','vars',3,'p_vars','yacc.py',56),
  ('rep_var -> variable rep_var','rep_var',2,'p_rep_var','yacc.py',64),
  ('rep_var -> empty','rep_var',1,'p_rep_var','yacc.py',65),
  ('variable -> TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLON','variable',5,'p_variable','yacc.py',75),
  ('mas_ids -> TOKEN_COMMA TOKEN_ID mas_ids','mas_ids',3,'p_mas_ids','yacc.py',85),
  ('mas_ids -> empty','mas_ids',1,'p_mas_ids','yacc.py',86),
  ('type -> TOKEN_INT','type',1,'p_type','yacc.py',96),
  ('type -> TOKEN_FLOAT','type',1,'p_type','yacc.py',97),
  ('body -> TOKEN_LBRACE dec_statements TOKEN_RBRACE','body',3,'p_body','yacc.py',106),
  ('dec_statements -> statement dec_statements','dec_statements',2,'p_dec_statements','yacc.py',110),
  ('dec_statements -> empty','dec_statements',1,'p_dec_statements','yacc.py',111),
  ('statement -> assign','statement',1,'p_statement','yacc.py',121),
  ('statement -> condition','statement',1,'p_statement','yacc.py',122),
  ('statement -> cycle','statement',1,'p_statement','yacc.py',123),
  ('statement -> f_call','statement',1,'p_statement','yacc.py',124),
  ('statement -> print','statement',1,'p_statement','yacc.py',125),
  ('print -> TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLON','print',5,'p_print','yacc.py',129),
  ('expresiones -> TOKEN_CTE_STRING comas','expresiones',2,'p_expresiones','yacc.py',139),
  ('expresiones -> expresion comas','expresiones',2,'p_expresiones','yacc.py',140),
  ('comas -> TOKEN_COMMA expresion comas','comas',3,'p_comas','yacc.py',147),
  ('comas -> TOKEN_COMMA TOKEN_CTE_STRING comas','comas',3,'p_comas','yacc.py',148),
  ('comas -> empty','comas',1,'p_comas','yacc.py',149),
  ('saveQuad -> empty','saveQuad',1,'p_saveQuad','yacc.py',159),
  ('GotoF -> empty','GotoF',1,'p_GotoF','yacc.py',164),
  ('cycle -> TOKEN_WHILE TOKEN_LPAREN saveQuad expresion GotoF TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON','cycle',9,'p_cycle','yacc.py',171),
  ('saveQuadIF -> empty','saveQuadIF',1,'p_saveQuadIF','yacc.py',186),
  ('GotoFIF -> empty','GotoFIF',1,'p_GotoFIF','yacc.py',195),
  ('condition -> TOKEN_IF TOKEN_LPAREN expresion saveQuadIF TOKEN_RPAREN body GotoFIF else TOKEN_SEMICOLON','condition',9,'p_condition','yacc.py',207),
  ('else -> TOKEN_ELSE body','else',2,'p_else','yacc.py',221),
  ('else -> empty','else',1,'p_else','yacc.py',222),
  ('cte -> TOKEN_CTE_INT','cte',1,'p_cte','yacc.py',229),
  ('cte -> TOKEN_CTE_FLOAT','cte',1,'p_cte','yacc.py',230),
  ('expresion -> exp comparar','expresion',2,'p_expresion','yacc.py',237),
  ('comparar -> signo exp','comparar',2,'p_comparar','yacc.py',255),
  ('comparar -> empty','comparar',1,'p_comparar','yacc.py',256),
  ('signo -> TOKEN_GT','signo',1,'p_signo','yacc.py',263),
  ('signo -> TOKEN_LT','signo',1,'p_signo','yacc.py',264),
  ('signo -> TOKEN_NE','signo',1,'p_signo','yacc.py',265),
  ('exp -> termino suma_resta','exp',2,'p_exp','yacc.py',269),
  ('suma_resta -> TOKEN_PLUS termino suma_resta','suma_resta',3,'p_suma_resta','yacc.py',287),
  ('suma_resta -> TOKEN_MINUS termino suma_resta','suma_resta',3,'p_suma_resta','yacc.py',288),
  ('suma_resta -> empty','suma_resta',1,'p_suma_resta','yacc.py',289),
  ('termino -> factor multi_div','termino',2,'p_termino','yacc.py',299),
  ('multi_div -> operacion_mul_div factor multi_div','multi_div',3,'p_multi_div','yacc.py',317),
  ('multi_div -> empty','multi_div',1,'p_multi_div','yacc.py',318),
  ('operacion_mul_div -> TOKEN_DIV','operacion_mul_div',1,'p_operacion_mul_div','yacc.py',328),
  ('operacion_mul_div -> TOKEN_MULT','operacion_mul_div',1,'p_operacion_mul_div','yacc.py',329),
  ('factor -> definicion','factor',1,'p_factor','yacc.py',333),
  ('factor -> operaciones','factor',1,'p_factor','yacc.py',334),
  ('definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN','definicion',3,'p_definicion','yacc.py',338),
  ('operaciones -> opciones_mas_menos id_cte','operaciones',2,'p_operaciones','yacc.py',345),
  ('opciones_mas_menos -> TOKEN_PLUS','opciones_mas_menos',1,'p_opciones_mas_menos','yacc.py',362),
  ('opciones_mas_menos -> TOKEN_MINUS','opciones_mas_menos',1,'p_opciones_mas_menos','yacc.py',363),
  ('opciones_mas_menos -> empty','opciones_mas_menos',1,'p_opciones_mas_menos','yacc.py',364),
  ('id_cte -> TOKEN_ID','id_cte',1,'p_id_cte','yacc.py',368),
  ('id_cte -> cte','id_cte',1,'p_id_cte','yacc.py',369),
  ('funcs -> TOKEN_VOID TOKEN_ID scopefun TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL TOKEN_SEMICOLON','funcs',11,'p_funcs','yacc.py',385),
  ('scopefun -> empty','scopefun',1,'p_scopefun','yacc.py',392),
  ('tipo -> def_tipo','tipo',1,'p_tipo','yacc.py',398),
  ('tipo -> empty','tipo',1,'p_tipo','yacc.py',399),
  ('def_tipo -> TOKEN_ID TOKEN_COLON type coma','def_tipo',4,'p_def_tipo','yacc.py',412),
  ('coma -> TOKEN_COMMA TOKEN_ID TOKEN_COLON type coma','coma',5,'p_coma','yacc.py',419),
  ('coma -> empty','coma',1,'p_coma','yacc.py',420),
  ('var -> vars','var',1,'p_var','yacc.py',431),
  ('var -> empty','var',1,'p_var','yacc.py',432),
  ('f_call -> TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLON','f_call',5,'p_f_call','yacc.py',436),
  ('def_exp -> expresion coma2','def_exp',2,'p_def_exp','yacc.py',455),
  ('def_exp -> empty','def_exp',1,'p_def_exp','yacc.py',456),
  ('coma2 -> TOKEN_COMMA expresion coma2','coma2',3,'p_coma2','yacc.py',475),
  ('coma2 -> empty','coma2',1,'p_coma2','yacc.py',476),
  ('assign -> TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLON','assign',4,'p_assign','yacc.py',483),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',493),
]
