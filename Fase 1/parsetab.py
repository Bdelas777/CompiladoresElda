
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'TOKEN_ASSIGN TOKEN_COLON TOKEN_COMMA TOKEN_CTE_FLOAT TOKEN_CTE_INT TOKEN_CTE_STRING TOKEN_DIV TOKEN_DO TOKEN_ELSE TOKEN_END TOKEN_FLOAT TOKEN_FOR TOKEN_FOR TOKEN_GT TOKEN_ID TOKEN_IF TOKEN_INT TOKEN_LBRACE TOKEN_LCOL TOKEN_LPAREN TOKEN_LT TOKEN_MAIN TOKEN_MINUS TOKEN_MULT TOKEN_NE TOKEN_PLUS TOKEN_PRINT TOKEN_PROGRAM TOKEN_RBRACE TOKEN_RCOL TOKEN_RPAREN TOKEN_SEMICOLON TOKEN_VAR TOKEN_VOID TOKEN_WHILEprograma : TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON saveGo dec_var dec_funcs TOKEN_MAIN fillMain body TOKEN_ENDsaveGo : emptyfillMain : emptydec_var : vars\n    | emptydec_funcs : funcs dec_funcs\n    | emptyvars : TOKEN_VAR variable rep_varrep_var  : variable rep_var\n    |  emptyvariable : TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLONmas_ids : TOKEN_COMMA TOKEN_ID mas_ids\n    |  emptytype : TOKEN_INT\n    | TOKEN_FLOATbody : TOKEN_LBRACE dec_statements TOKEN_RBRACEdec_statements : statement dec_statements\n    | emptystatement : assign\n        | condition\n        | cycle\n        | f_call\n        | print\n        | for_cycleprint : TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLONexpresiones : TOKEN_CTE_STRING comas\n    | expresion comascomas : TOKEN_COMMA expresion comas\n    | TOKEN_COMMA TOKEN_CTE_STRING comas\n    | emptysaveQuad : emptyGotoF : emptycycle : TOKEN_WHILE TOKEN_LPAREN saveQuad expresion GotoF TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLONsaveQuadIF : emptyGotoFIF : emptycondition : TOKEN_IF TOKEN_LPAREN expresion saveQuadIF TOKEN_RPAREN body GotoFIF else TOKEN_SEMICOLONelse : TOKEN_ELSE body\n    | emptycte : TOKEN_CTE_INT\n    | TOKEN_CTE_FLOATexpresion : exp compararcomparar  : signo exp\n    | emptysigno : TOKEN_GT\n    | TOKEN_LT\n    | TOKEN_NEexp : termino suma_restaoperacion_sum_res : TOKEN_PLUS\n    | TOKEN_MINUSsuma_resta  : operacion_sum_res termino suma_resta\n                    | emptytermino : factor multi_divmulti_div : operacion_mul_div factor multi_div\n                    | emptyoperacion_mul_div : TOKEN_DIV\n    | TOKEN_MULTfactor : definicion\n    | operacionesdefinicion : TOKEN_LPAREN expresion TOKEN_RPARENoperaciones : opciones_mas_menos id_cteopciones_mas_menos : TOKEN_PLUS\n    | TOKEN_MINUS\n    | emptyid_cte : TOKEN_ID\n    | ctefuncs : TOKEN_VOID TOKEN_ID save_func_start TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL end_func TOKEN_SEMICOLONsave_func_start : emptyend_func : emptytipo : def_tipo\n    | emptydef_tipo : TOKEN_ID TOKEN_COLON type comacoma : TOKEN_COMMA TOKEN_ID TOKEN_COLON type coma\n    | emptyvar : vars \n    | emptyf_call : TOKEN_ID era_quad TOKEN_LPAREN def_exp TOKEN_RPAREN gosub_quad TOKEN_SEMICOLONera_quad : emptygosub_quad : emptydef_exp : expresion param_quad coma2\n    | emptyparam_quad : emptycoma2 : TOKEN_COMMA expresion param_quad_coma coma2\n    | emptyparam_quad_coma : emptyassign : TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLONfor_cycle : TOKEN_FOR TOKEN_LPAREN for_init TOKEN_SEMICOLON saveQuadFor expresion GotoFFor TOKEN_SEMICOLON for_increment TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLONfor_init : assign_for\n                | emptyassign_for : TOKEN_ID TOKEN_ASSIGN expresionfor_increment : assign_for\n                     | emptysaveQuadFor : emptyGotoFFor : emptyempty :'
    
_lr_action_items = {'TOKEN_PROGRAM':([0,],[2,]),'$end':([1,40,],[0,-1,]),'TOKEN_ID':([2,10,14,15,20,24,34,35,42,44,45,46,47,48,49,59,62,65,66,67,68,77,78,79,80,81,82,84,85,95,97,99,100,101,103,105,106,108,110,111,120,126,129,130,132,147,150,151,160,169,185,189,191,198,],[3,16,19,16,16,32,50,55,50,-19,-20,-21,-22,-23,-24,-11,-94,-94,-94,-94,92,-94,114,-61,-62,-63,-94,-94,-31,-85,-94,-44,-45,-46,-94,-48,-49,-94,-55,-56,-63,-94,-94,-94,153,-25,-94,-92,-94,-76,92,-36,-33,-86,]),'TOKEN_SEMICOLON':([3,36,37,38,60,68,71,72,73,74,75,76,89,90,91,96,98,102,104,107,109,113,114,115,116,117,124,137,138,139,140,141,152,155,156,157,158,162,166,168,171,172,174,175,177,178,181,183,184,190,197,],[4,59,-14,-15,-16,-94,95,-94,-94,-94,-57,-58,129,-87,-88,-41,-43,-47,-51,-52,-54,-60,-64,-65,-39,-40,147,-42,-94,-94,-59,-94,-89,-50,-53,169,-78,-94,-94,-94,-94,-35,185,-93,187,-68,189,-38,191,-37,198,]),'TOKEN_VAR':([4,5,6,94,],[-94,10,-2,10,]),'TOKEN_VOID':([4,5,6,7,8,9,12,15,20,21,22,30,59,187,],[-94,-94,-2,14,-4,-5,14,-94,-94,-8,-10,-9,-11,-66,]),'TOKEN_MAIN':([4,5,6,7,8,9,11,12,13,15,18,20,21,22,30,59,187,],[-94,-94,-2,-94,-4,-5,17,-94,-7,-94,-6,-94,-8,-10,-9,-11,-66,]),'TOKEN_LBRACE':([15,17,20,21,22,26,27,30,59,94,134,135,136,144,173,182,196,],[-94,-94,-94,-8,-10,34,-3,-9,-11,-94,34,-74,-75,34,34,34,34,]),'TOKEN_COMMA':([16,32,37,38,72,73,74,75,76,87,88,93,96,98,102,104,107,109,113,114,115,116,117,119,137,138,139,140,142,143,148,149,155,156,170,176,179,180,],[24,24,-14,-15,-94,-94,-94,-57,-58,126,126,132,-41,-43,-47,-51,-52,-54,-60,-64,-65,-39,-40,-94,-42,-94,-94,-59,160,-81,126,126,-50,-53,-94,132,160,-84,]),'TOKEN_COLON':([16,23,25,32,39,55,153,],[-94,31,-13,-94,-12,69,167,]),'TOKEN_LPAREN':([19,28,29,50,51,52,53,54,62,63,64,65,66,67,77,82,84,85,97,99,100,101,103,105,106,108,110,111,126,129,130,150,151,160,],[-94,35,-67,-94,65,66,67,68,77,82,-77,77,-94,77,77,77,77,-31,77,-44,-45,-46,77,-48,-49,77,-55,-56,77,-94,77,77,-92,77,]),'TOKEN_INT':([31,69,167,],[37,37,37,]),'TOKEN_FLOAT':([31,69,167,],[38,38,38,]),'TOKEN_END':([33,60,],[40,-16,]),'TOKEN_RBRACE':([34,41,42,43,44,45,46,47,48,49,61,95,147,169,189,191,198,],[-94,60,-94,-18,-19,-20,-21,-22,-23,-24,-17,-85,-25,-76,-36,-33,-86,]),'TOKEN_IF':([34,42,44,45,46,47,48,49,95,147,169,189,191,198,],[51,51,-19,-20,-21,-22,-23,-24,-85,-25,-76,-36,-33,-86,]),'TOKEN_WHILE':([34,42,44,45,46,47,48,49,95,147,169,189,191,198,],[52,52,-19,-20,-21,-22,-23,-24,-85,-25,-76,-36,-33,-86,]),'TOKEN_PRINT':([34,42,44,45,46,47,48,49,95,147,169,189,191,198,],[53,53,-19,-20,-21,-22,-23,-24,-85,-25,-76,-36,-33,-86,]),'TOKEN_FOR':([34,42,44,45,46,47,48,49,95,147,169,189,191,198,],[54,54,-19,-20,-21,-22,-23,-24,-85,-25,-76,-36,-33,-86,]),'TOKEN_RPAREN':([35,37,38,56,57,58,72,73,74,75,76,82,83,86,87,88,93,96,98,102,104,107,109,112,113,114,115,116,117,118,119,120,121,122,123,125,127,128,131,133,137,138,139,140,142,143,145,146,148,149,152,155,156,159,161,164,165,170,176,179,180,185,186,188,192,193,194,],[-94,-14,-15,70,-69,-70,-94,-94,-94,-57,-58,-94,-94,124,-94,-94,-94,-41,-43,-47,-51,-52,-54,140,-60,-64,-65,-39,-40,141,-94,-80,144,-34,-94,-26,-30,-27,-71,-73,-42,-94,-94,-59,-94,-81,163,-32,-94,-94,-89,-50,-53,-79,-83,-28,-29,-94,-94,-94,-84,-94,-72,-82,195,-90,-91,]),'TOKEN_ASSIGN':([50,92,],[62,130,]),'TOKEN_RCOL':([60,154,],[-16,168,]),'TOKEN_ELSE':([60,162,171,172,],[-16,-94,182,-35,]),'TOKEN_PLUS':([62,65,66,67,73,74,75,76,77,82,84,85,97,99,100,101,103,105,106,107,108,109,110,111,113,114,115,116,117,126,129,130,138,139,140,150,151,156,160,],[79,79,-94,79,105,-94,-57,-58,79,79,79,-31,79,-44,-45,-46,79,-48,-49,-52,79,-54,-55,-56,-60,-64,-65,-39,-40,79,-94,79,105,-94,-59,79,-92,-53,79,]),'TOKEN_MINUS':([62,65,66,67,73,74,75,76,77,82,84,85,97,99,100,101,103,105,106,107,108,109,110,111,113,114,115,116,117,126,129,130,138,139,140,150,151,156,160,],[80,80,-94,80,106,-94,-57,-58,80,80,80,-31,80,-44,-45,-46,80,-48,-49,-52,80,-54,-55,-56,-60,-64,-65,-39,-40,80,-94,80,106,-94,-59,80,-92,-53,80,]),'TOKEN_CTE_INT':([62,65,66,67,77,78,79,80,81,82,84,85,97,99,100,101,103,105,106,108,110,111,120,126,129,130,150,151,160,],[-94,-94,-94,-94,-94,116,-61,-62,-63,-94,-94,-31,-94,-44,-45,-46,-94,-48,-49,-94,-55,-56,-63,-94,-94,-94,-94,-92,-94,]),'TOKEN_CTE_FLOAT':([62,65,66,67,77,78,79,80,81,82,84,85,97,99,100,101,103,105,106,108,110,111,120,126,129,130,150,151,160,],[-94,-94,-94,-94,-94,117,-61,-62,-63,-94,-94,-31,-94,-44,-45,-46,-94,-48,-49,-94,-55,-56,-63,-94,-94,-94,-94,-92,-94,]),'TOKEN_CTE_STRING':([67,126,],[87,149,]),'TOKEN_LCOL':([70,],[94,]),'TOKEN_GT':([72,73,74,75,76,102,104,107,109,113,114,115,116,117,138,139,140,155,156,],[99,-94,-94,-57,-58,-47,-51,-52,-54,-60,-64,-65,-39,-40,-94,-94,-59,-50,-53,]),'TOKEN_LT':([72,73,74,75,76,102,104,107,109,113,114,115,116,117,138,139,140,155,156,],[100,-94,-94,-57,-58,-47,-51,-52,-54,-60,-64,-65,-39,-40,-94,-94,-59,-50,-53,]),'TOKEN_NE':([72,73,74,75,76,102,104,107,109,113,114,115,116,117,138,139,140,155,156,],[101,-94,-94,-57,-58,-47,-51,-52,-54,-60,-64,-65,-39,-40,-94,-94,-59,-50,-53,]),'TOKEN_DIV':([74,75,76,113,114,115,116,117,139,140,],[110,-57,-58,-60,-64,-65,-39,-40,110,-59,]),'TOKEN_MULT':([74,75,76,113,114,115,116,117,139,140,],[111,-57,-58,-60,-64,-65,-39,-40,111,-59,]),'TOKEN_DO':([163,195,],[173,196,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'saveGo':([4,],[5,]),'empty':([4,5,7,12,15,16,17,19,20,32,34,35,42,50,62,65,66,67,68,72,73,74,77,82,83,84,87,88,93,94,97,103,108,119,123,126,129,130,138,139,141,142,148,149,150,160,162,166,168,170,171,176,179,185,],[6,9,13,13,22,25,27,29,22,25,43,58,43,64,81,81,85,81,91,98,104,109,81,120,122,81,127,127,133,136,81,81,81,143,146,81,151,81,104,109,158,161,127,127,81,81,172,175,178,180,183,133,161,194,]),'dec_var':([5,],[7,]),'vars':([5,94,],[8,135,]),'dec_funcs':([7,12,],[11,18,]),'funcs':([7,12,],[12,12,]),'variable':([10,15,20,],[15,20,20,]),'rep_var':([15,20,],[21,30,]),'mas_ids':([16,32,],[23,39,]),'fillMain':([17,],[26,]),'save_func_start':([19,],[28,]),'body':([26,134,144,173,182,196,],[33,154,162,184,190,197,]),'type':([31,69,167,],[36,93,176,]),'dec_statements':([34,42,],[41,61,]),'statement':([34,42,],[42,42,]),'assign':([34,42,],[44,44,]),'condition':([34,42,],[45,45,]),'cycle':([34,42,],[46,46,]),'f_call':([34,42,],[47,47,]),'print':([34,42,],[48,48,]),'for_cycle':([34,42,],[49,49,]),'tipo':([35,],[56,]),'def_tipo':([35,],[57,]),'era_quad':([50,],[63,]),'expresion':([62,65,67,77,82,84,126,130,150,160,],[71,83,88,112,119,123,148,152,166,170,]),'exp':([62,65,67,77,82,84,97,126,130,150,160,],[72,72,72,72,72,72,137,72,72,72,72,]),'termino':([62,65,67,77,82,84,97,103,126,130,150,160,],[73,73,73,73,73,73,73,138,73,73,73,73,]),'factor':([62,65,67,77,82,84,97,103,108,126,130,150,160,],[74,74,74,74,74,74,74,74,139,74,74,74,74,]),'definicion':([62,65,67,77,82,84,97,103,108,126,130,150,160,],[75,75,75,75,75,75,75,75,75,75,75,75,75,]),'operaciones':([62,65,67,77,82,84,97,103,108,126,130,150,160,],[76,76,76,76,76,76,76,76,76,76,76,76,76,]),'opciones_mas_menos':([62,65,67,77,82,84,97,103,108,126,130,150,160,],[78,78,78,78,78,78,78,78,78,78,78,78,78,]),'saveQuad':([66,],[84,]),'expresiones':([67,],[86,]),'for_init':([68,],[89,]),'assign_for':([68,185,],[90,193,]),'comparar':([72,],[96,]),'signo':([72,],[97,]),'suma_resta':([73,138,],[102,155,]),'operacion_sum_res':([73,138,],[103,103,]),'multi_div':([74,139,],[107,156,]),'operacion_mul_div':([74,139,],[108,108,]),'id_cte':([78,],[113,]),'cte':([78,],[115,]),'def_exp':([82,],[118,]),'saveQuadIF':([83,],[121,]),'comas':([87,88,148,149,],[125,128,164,165,]),'coma':([93,176,],[131,186,]),'var':([94,],[134,]),'param_quad':([119,],[142,]),'GotoF':([123,],[145,]),'saveQuadFor':([129,],[150,]),'gosub_quad':([141,],[157,]),'coma2':([142,179,],[159,188,]),'GotoFIF':([162,],[171,]),'GotoFFor':([166,],[174,]),'end_func':([168,],[177,]),'param_quad_coma':([170,],[179,]),'else':([171,],[181,]),'for_increment':([185,],[192,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON saveGo dec_var dec_funcs TOKEN_MAIN fillMain body TOKEN_END','programa',10,'p_programa','yacc.py',34),
  ('saveGo -> empty','saveGo',1,'p_saveGo','yacc.py',42),
  ('fillMain -> empty','fillMain',1,'p_fillMain','yacc.py',48),
  ('dec_var -> vars','dec_var',1,'p_dec_var','yacc.py',60),
  ('dec_var -> empty','dec_var',1,'p_dec_var','yacc.py',61),
  ('dec_funcs -> funcs dec_funcs','dec_funcs',2,'p_dec_funcs','yacc.py',65),
  ('dec_funcs -> empty','dec_funcs',1,'p_dec_funcs','yacc.py',66),
  ('vars -> TOKEN_VAR variable rep_var','vars',3,'p_vars','yacc.py',76),
  ('rep_var -> variable rep_var','rep_var',2,'p_rep_var','yacc.py',84),
  ('rep_var -> empty','rep_var',1,'p_rep_var','yacc.py',85),
  ('variable -> TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLON','variable',5,'p_variable','yacc.py',95),
  ('mas_ids -> TOKEN_COMMA TOKEN_ID mas_ids','mas_ids',3,'p_mas_ids','yacc.py',105),
  ('mas_ids -> empty','mas_ids',1,'p_mas_ids','yacc.py',106),
  ('type -> TOKEN_INT','type',1,'p_type','yacc.py',116),
  ('type -> TOKEN_FLOAT','type',1,'p_type','yacc.py',117),
  ('body -> TOKEN_LBRACE dec_statements TOKEN_RBRACE','body',3,'p_body','yacc.py',126),
  ('dec_statements -> statement dec_statements','dec_statements',2,'p_dec_statements','yacc.py',130),
  ('dec_statements -> empty','dec_statements',1,'p_dec_statements','yacc.py',131),
  ('statement -> assign','statement',1,'p_statement','yacc.py',141),
  ('statement -> condition','statement',1,'p_statement','yacc.py',142),
  ('statement -> cycle','statement',1,'p_statement','yacc.py',143),
  ('statement -> f_call','statement',1,'p_statement','yacc.py',144),
  ('statement -> print','statement',1,'p_statement','yacc.py',145),
  ('statement -> for_cycle','statement',1,'p_statement','yacc.py',146),
  ('print -> TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLON','print',5,'p_print','yacc.py',150),
  ('expresiones -> TOKEN_CTE_STRING comas','expresiones',2,'p_expresiones','yacc.py',161),
  ('expresiones -> expresion comas','expresiones',2,'p_expresiones','yacc.py',162),
  ('comas -> TOKEN_COMMA expresion comas','comas',3,'p_comas','yacc.py',169),
  ('comas -> TOKEN_COMMA TOKEN_CTE_STRING comas','comas',3,'p_comas','yacc.py',170),
  ('comas -> empty','comas',1,'p_comas','yacc.py',171),
  ('saveQuad -> empty','saveQuad',1,'p_saveQuad','yacc.py',181),
  ('GotoF -> empty','GotoF',1,'p_GotoF','yacc.py',185),
  ('cycle -> TOKEN_WHILE TOKEN_LPAREN saveQuad expresion GotoF TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON','cycle',9,'p_cycle','yacc.py',191),
  ('saveQuadIF -> empty','saveQuadIF',1,'p_saveQuadIF','yacc.py',201),
  ('GotoFIF -> empty','GotoFIF',1,'p_GotoFIF','yacc.py',207),
  ('condition -> TOKEN_IF TOKEN_LPAREN expresion saveQuadIF TOKEN_RPAREN body GotoFIF else TOKEN_SEMICOLON','condition',9,'p_condition','yacc.py',214),
  ('else -> TOKEN_ELSE body','else',2,'p_else','yacc.py',224),
  ('else -> empty','else',1,'p_else','yacc.py',225),
  ('cte -> TOKEN_CTE_INT','cte',1,'p_cte','yacc.py',232),
  ('cte -> TOKEN_CTE_FLOAT','cte',1,'p_cte','yacc.py',233),
  ('expresion -> exp comparar','expresion',2,'p_expresion','yacc.py',240),
  ('comparar -> signo exp','comparar',2,'p_comparar','yacc.py',260),
  ('comparar -> empty','comparar',1,'p_comparar','yacc.py',261),
  ('signo -> TOKEN_GT','signo',1,'p_signo','yacc.py',268),
  ('signo -> TOKEN_LT','signo',1,'p_signo','yacc.py',269),
  ('signo -> TOKEN_NE','signo',1,'p_signo','yacc.py',270),
  ('exp -> termino suma_resta','exp',2,'p_exp','yacc.py',274),
  ('operacion_sum_res -> TOKEN_PLUS','operacion_sum_res',1,'p_operacion_sum_res','yacc.py',299),
  ('operacion_sum_res -> TOKEN_MINUS','operacion_sum_res',1,'p_operacion_sum_res','yacc.py',300),
  ('suma_resta -> operacion_sum_res termino suma_resta','suma_resta',3,'p_suma_resta','yacc.py',304),
  ('suma_resta -> empty','suma_resta',1,'p_suma_resta','yacc.py',305),
  ('termino -> factor multi_div','termino',2,'p_termino','yacc.py',315),
  ('multi_div -> operacion_mul_div factor multi_div','multi_div',3,'p_multi_div','yacc.py',339),
  ('multi_div -> empty','multi_div',1,'p_multi_div','yacc.py',340),
  ('operacion_mul_div -> TOKEN_DIV','operacion_mul_div',1,'p_operacion_mul_div','yacc.py',350),
  ('operacion_mul_div -> TOKEN_MULT','operacion_mul_div',1,'p_operacion_mul_div','yacc.py',351),
  ('factor -> definicion','factor',1,'p_factor','yacc.py',355),
  ('factor -> operaciones','factor',1,'p_factor','yacc.py',356),
  ('definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN','definicion',3,'p_definicion','yacc.py',360),
  ('operaciones -> opciones_mas_menos id_cte','operaciones',2,'p_operaciones','yacc.py',366),
  ('opciones_mas_menos -> TOKEN_PLUS','opciones_mas_menos',1,'p_opciones_mas_menos','yacc.py',383),
  ('opciones_mas_menos -> TOKEN_MINUS','opciones_mas_menos',1,'p_opciones_mas_menos','yacc.py',384),
  ('opciones_mas_menos -> empty','opciones_mas_menos',1,'p_opciones_mas_menos','yacc.py',385),
  ('id_cte -> TOKEN_ID','id_cte',1,'p_id_cte','yacc.py',389),
  ('id_cte -> cte','id_cte',1,'p_id_cte','yacc.py',390),
  ('funcs -> TOKEN_VOID TOKEN_ID save_func_start TOKEN_LPAREN tipo TOKEN_RPAREN TOKEN_LCOL var body TOKEN_RCOL end_func TOKEN_SEMICOLON','funcs',12,'p_funcs','yacc.py',405),
  ('save_func_start -> empty','save_func_start',1,'p_save_func_start','yacc.py',411),
  ('end_func -> empty','end_func',1,'p_end_func','yacc.py',418),
  ('tipo -> def_tipo','tipo',1,'p_tipo','yacc.py',424),
  ('tipo -> empty','tipo',1,'p_tipo','yacc.py',425),
  ('def_tipo -> TOKEN_ID TOKEN_COLON type coma','def_tipo',4,'p_def_tipo','yacc.py',438),
  ('coma -> TOKEN_COMMA TOKEN_ID TOKEN_COLON type coma','coma',5,'p_coma','yacc.py',445),
  ('coma -> empty','coma',1,'p_coma','yacc.py',446),
  ('var -> vars','var',1,'p_var','yacc.py',457),
  ('var -> empty','var',1,'p_var','yacc.py',458),
  ('f_call -> TOKEN_ID era_quad TOKEN_LPAREN def_exp TOKEN_RPAREN gosub_quad TOKEN_SEMICOLON','f_call',7,'p_f_call','yacc.py',462),
  ('era_quad -> empty','era_quad',1,'p_era_quad','yacc.py',479),
  ('gosub_quad -> empty','gosub_quad',1,'p_gosub_quad','yacc.py',486),
  ('def_exp -> expresion param_quad coma2','def_exp',3,'p_def_exp','yacc.py',492),
  ('def_exp -> empty','def_exp',1,'p_def_exp','yacc.py',493),
  ('param_quad -> empty','param_quad',1,'p_param_quad','yacc.py',503),
  ('coma2 -> TOKEN_COMMA expresion param_quad_coma coma2','coma2',4,'p_coma2','yacc.py',512),
  ('coma2 -> empty','coma2',1,'p_coma2','yacc.py',513),
  ('param_quad_coma -> empty','param_quad_coma',1,'p_param_quad_coma','yacc.py',520),
  ('assign -> TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLON','assign',4,'p_assign','yacc.py',529),
  ('for_cycle -> TOKEN_FOR TOKEN_LPAREN for_init TOKEN_SEMICOLON saveQuadFor expresion GotoFFor TOKEN_SEMICOLON for_increment TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON','for_cycle',13,'p_for_cycle','yacc.py',538),
  ('for_init -> assign_for','for_init',1,'p_for_init','yacc.py',571),
  ('for_init -> empty','for_init',1,'p_for_init','yacc.py',572),
  ('assign_for -> TOKEN_ID TOKEN_ASSIGN expresion','assign_for',3,'p_assign_for','yacc.py',576),
  ('for_increment -> assign_for','for_increment',1,'p_for_increment','yacc.py',585),
  ('for_increment -> empty','for_increment',1,'p_for_increment','yacc.py',586),
  ('saveQuadFor -> empty','saveQuadFor',1,'p_saveQuadFor','yacc.py',590),
  ('GotoFFor -> empty','GotoFFor',1,'p_GotoFFor','yacc.py',595),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',602),
]
