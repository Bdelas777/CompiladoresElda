
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'TOKEN_ASSIGN TOKEN_COLON TOKEN_COMMA TOKEN_CTE_FLOAT TOKEN_CTE_INT TOKEN_CTE_STRING TOKEN_DIV TOKEN_DO TOKEN_ELSE TOKEN_END TOKEN_EQ TOKEN_FLOAT TOKEN_GE TOKEN_GT TOKEN_ID TOKEN_IF TOKEN_INT TOKEN_LBRACE TOKEN_LE TOKEN_LPAREN TOKEN_LT TOKEN_MAIN TOKEN_MINUS TOKEN_MULT TOKEN_NE TOKEN_PLUS TOKEN_PRINT TOKEN_PROGRAM TOKEN_RBRACE TOKEN_RPAREN TOKEN_SEMICOLON TOKEN_VAR TOKEN_VOID TOKEN_WHILEprograma : TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var dec_funs TOKEN_MAIN body TOKEN_ENDdec_var : vars\n               | emptydec_funs : funs dec_funs\n                | emptyvars : TOKEN_VAR variable rep_varrep_var : variable rep_var\n               | emptyvariable : TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLONmas_ids : TOKEN_COMMA TOKEN_ID mas_ids\n               | emptytype : TOKEN_INT \n            | TOKEN_FLOATbody : TOKEN_LBRACE dec_statements TOKEN_RBRACEdec_statements : statement dec_statements\n                      | emptystatement : assign\n                 | condition\n                 | cycle\n                 | f_call\n                 | printprint : TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLONexpresiones : TOKEN_CTE_STRING comas\n                   | expresion comascomas : TOKEN_COMMA expresion comas\n             | TOKEN_COMMA TOKEN_CTE_STRING comas\n             | emptycycle : TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLONcondition : TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN body else TOKEN_SEMICOLONelse : TOKEN_ELSE body\n            | emptycte : TOKEN_CTE_INT\n           | TOKEN_CTE_FLOATexpresion : exp compararcomparar : signo exp\n                | emptysigno : TOKEN_GT\n             | TOKEN_LT\n             | TOKEN_NEexp : termino suma_restasuma_resta : TOKEN_PLUS termino suma_resta\n                  | TOKEN_MINUS termino suma_resta\n                  | emptyopcion_mas_menos : TOKEN_PLUS\n                        | TOKEN_MINUStermino : factor multi_divmulti_div : operacion_mul_div factor multi_div\n                 | emptyoperacion_mul_div : TOKEN_DIV\n                         | TOKEN_MULTfactor : definicion\n              | operacionesdefinicion : TOKEN_LPAREN expresion TOKEN_RPARENoperaciones : opciones_mas_menos id_cteopciones_mas_menos : TOKEN_PLUS\n                          | TOKEN_MINUS\n                          | emptyid_cte : TOKEN_ID\n              | cte\n              | f_call_exprf_call_expr : TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPARENfuns : TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN var body TOKEN_SEMICOLONtipo : def_tipo\n            | emptydef_tipo : TOKEN_ID TOKEN_COLON type comacoma : TOKEN_COMMA TOKEN_ID TOKEN_COLON type coma\n            | emptyvar : vars\n           | emptyf_call : TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLONdef_exp : expresion coma2\n               | emptycoma2 : TOKEN_COMMA expresion coma2\n             | emptyassign : TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLONempty :'
    
_lr_action_items = {'TOKEN_PROGRAM':([0,],[2,]),'$end':([1,30,],[0,-1,]),'TOKEN_ID':([2,8,12,13,18,22,25,26,32,34,35,36,37,38,53,54,55,56,57,60,67,68,69,70,71,74,84,86,88,89,90,92,93,96,98,99,109,115,119,127,128,132,150,152,],[3,14,17,14,14,29,39,43,39,-17,-18,-19,-20,-21,-76,-76,-76,-76,-76,-9,-76,102,-55,-56,-57,-57,-75,-76,-37,-38,-39,-76,-76,-76,-49,-50,-76,-76,135,-76,-70,-22,-29,-28,]),'TOKEN_SEMICOLON':([3,47,48,49,51,61,62,63,64,65,66,85,87,91,94,95,97,101,102,103,104,105,106,107,113,121,122,123,124,125,126,130,137,138,139,142,144,145,149,151,],[4,60,-12,-13,-14,84,-76,-76,-76,-51,-52,-34,-36,-40,-43,-46,-48,-54,-58,-59,-60,-32,-33,128,132,136,-35,-76,-76,-76,-53,-76,-41,-42,-47,150,-31,152,-61,-30,]),'TOKEN_VAR':([4,59,],[8,8,]),'TOKEN_VOID':([4,5,6,7,10,13,18,19,20,27,60,136,],[-76,12,-2,-3,12,-76,-76,-6,-8,-7,-9,-62,]),'TOKEN_MAIN':([4,5,6,7,9,10,11,13,16,18,19,20,27,60,136,],[-76,-76,-2,-3,15,-76,-5,-76,-4,-76,-6,-8,-7,-9,-62,]),'TOKEN_LBRACE':([13,15,18,19,20,27,59,60,81,82,83,111,131,143,],[-76,25,-76,-6,-8,-7,-76,-9,25,-68,-69,25,25,25,]),'TOKEN_COMMA':([14,29,48,49,62,63,64,65,66,73,78,79,80,85,87,91,94,95,97,101,102,103,104,105,106,122,123,124,125,126,129,133,134,137,138,139,149,153,],[22,22,-12,-13,-76,-76,-76,-51,-52,109,115,115,119,-34,-36,-40,-43,-46,-48,-54,-58,-59,-60,-32,-33,-35,-76,-76,-76,-53,109,115,115,-41,-42,-47,-61,119,]),'TOKEN_COLON':([14,21,23,29,43,50,135,],[-76,28,-11,-76,58,-10,148,]),'TOKEN_LPAREN':([17,39,40,41,42,53,54,55,56,57,67,86,88,89,90,92,93,96,98,99,102,109,115,127,],[26,54,55,56,57,67,67,67,67,67,67,67,-37,-38,-39,67,67,67,-49,-50,127,67,67,67,]),'TOKEN_END':([24,51,],[30,-14,]),'TOKEN_RBRACE':([25,31,32,33,34,35,36,37,38,52,84,128,132,150,152,],[-76,51,-76,-16,-17,-18,-19,-20,-21,-15,-75,-70,-22,-29,-28,]),'TOKEN_IF':([25,32,34,35,36,37,38,84,128,132,150,152,],[40,40,-17,-18,-19,-20,-21,-75,-70,-22,-29,-28,]),'TOKEN_WHILE':([25,32,34,35,36,37,38,84,128,132,150,152,],[41,41,-17,-18,-19,-20,-21,-75,-70,-22,-29,-28,]),'TOKEN_PRINT':([25,32,34,35,36,37,38,84,128,132,150,152,],[42,42,-17,-18,-19,-20,-21,-75,-70,-22,-29,-28,]),'TOKEN_RPAREN':([26,44,45,46,48,49,54,62,63,64,65,66,72,73,74,75,76,77,78,79,80,85,87,91,94,95,97,100,101,102,103,104,105,106,108,110,114,116,117,118,120,122,123,124,125,126,127,129,133,134,137,138,139,140,141,146,147,149,153,154,],[-76,59,-63,-64,-12,-13,-76,-76,-76,-76,-51,-52,107,-76,-72,111,112,113,-76,-76,-76,-34,-36,-40,-43,-46,-48,126,-54,-58,-59,-60,-32,-33,-71,-74,-23,-27,-24,-65,-67,-35,-76,-76,-76,-53,-76,-76,-76,-76,-41,-42,-47,149,-73,-25,-26,-61,-76,-66,]),'TOKEN_INT':([28,58,148,],[48,48,48,]),'TOKEN_FLOAT':([28,58,148,],[49,49,49,]),'TOKEN_ASSIGN':([39,],[53,]),'TOKEN_ELSE':([51,130,],[-14,143,]),'TOKEN_PLUS':([53,54,55,56,57,63,64,65,66,67,86,88,89,90,92,93,95,96,97,98,99,101,102,103,104,105,106,109,115,123,124,125,126,127,139,149,],[69,69,69,69,69,92,-76,-51,-52,69,69,-37,-38,-39,69,69,-46,69,-48,-49,-50,-54,-58,-59,-60,-32,-33,69,69,92,92,-76,-53,69,-47,-61,]),'TOKEN_MINUS':([53,54,55,56,57,63,64,65,66,67,86,88,89,90,92,93,95,96,97,98,99,101,102,103,104,105,106,109,115,123,124,125,126,127,139,149,],[70,70,70,70,70,93,-76,-51,-52,70,70,-37,-38,-39,70,70,-46,70,-48,-49,-50,-54,-58,-59,-60,-32,-33,70,70,93,93,-76,-53,70,-47,-61,]),'TOKEN_CTE_INT':([53,54,55,56,57,67,68,69,70,71,74,86,88,89,90,92,93,96,98,99,109,115,127,],[-76,-76,-76,-76,-76,-76,105,-55,-56,-57,-57,-76,-37,-38,-39,-76,-76,-76,-49,-50,-76,-76,-76,]),'TOKEN_CTE_FLOAT':([53,54,55,56,57,67,68,69,70,71,74,86,88,89,90,92,93,96,98,99,109,115,127,],[-76,-76,-76,-76,-76,-76,106,-55,-56,-57,-57,-76,-37,-38,-39,-76,-76,-76,-49,-50,-76,-76,-76,]),'TOKEN_CTE_STRING':([57,115,],[78,134,]),'TOKEN_GT':([62,63,64,65,66,91,94,95,97,101,102,103,104,105,106,123,124,125,126,137,138,139,149,],[88,-76,-76,-51,-52,-40,-43,-46,-48,-54,-58,-59,-60,-32,-33,-76,-76,-76,-53,-41,-42,-47,-61,]),'TOKEN_LT':([62,63,64,65,66,91,94,95,97,101,102,103,104,105,106,123,124,125,126,137,138,139,149,],[89,-76,-76,-51,-52,-40,-43,-46,-48,-54,-58,-59,-60,-32,-33,-76,-76,-76,-53,-41,-42,-47,-61,]),'TOKEN_NE':([62,63,64,65,66,91,94,95,97,101,102,103,104,105,106,123,124,125,126,137,138,139,149,],[90,-76,-76,-51,-52,-40,-43,-46,-48,-54,-58,-59,-60,-32,-33,-76,-76,-76,-53,-41,-42,-47,-61,]),'TOKEN_DIV':([64,65,66,101,102,103,104,105,106,125,126,149,],[98,-51,-52,-54,-58,-59,-60,-32,-33,98,-53,-61,]),'TOKEN_MULT':([64,65,66,101,102,103,104,105,106,125,126,149,],[99,-51,-52,-54,-58,-59,-60,-32,-33,99,-53,-61,]),'TOKEN_DO':([112,],[131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'dec_var':([4,],[5,]),'vars':([4,59,],[6,82,]),'empty':([4,5,10,13,14,18,25,26,29,32,53,54,55,56,57,59,62,63,64,67,73,78,79,80,86,92,93,96,109,115,123,124,125,127,129,130,133,134,153,],[7,11,11,20,23,20,33,46,23,33,71,74,71,71,71,83,87,94,97,71,110,116,116,120,71,71,71,71,71,71,94,94,97,74,110,144,116,116,120,]),'dec_funs':([5,10,],[9,16,]),'funs':([5,10,],[10,10,]),'variable':([8,13,18,],[13,18,18,]),'rep_var':([13,18,],[19,27,]),'mas_ids':([14,29,],[21,50,]),'body':([15,81,111,131,143,],[24,121,130,145,151,]),'dec_statements':([25,32,],[31,52,]),'statement':([25,32,],[32,32,]),'assign':([25,32,],[34,34,]),'condition':([25,32,],[35,35,]),'cycle':([25,32,],[36,36,]),'f_call':([25,32,],[37,37,]),'print':([25,32,],[38,38,]),'tipo':([26,],[44,]),'def_tipo':([26,],[45,]),'type':([28,58,148,],[47,80,153,]),'expresion':([53,54,55,56,57,67,109,115,127,],[61,73,75,76,79,100,129,133,73,]),'exp':([53,54,55,56,57,67,86,109,115,127,],[62,62,62,62,62,62,122,62,62,62,]),'termino':([53,54,55,56,57,67,86,92,93,109,115,127,],[63,63,63,63,63,63,63,123,124,63,63,63,]),'factor':([53,54,55,56,57,67,86,92,93,96,109,115,127,],[64,64,64,64,64,64,64,64,64,125,64,64,64,]),'definicion':([53,54,55,56,57,67,86,92,93,96,109,115,127,],[65,65,65,65,65,65,65,65,65,65,65,65,65,]),'operaciones':([53,54,55,56,57,67,86,92,93,96,109,115,127,],[66,66,66,66,66,66,66,66,66,66,66,66,66,]),'opciones_mas_menos':([53,54,55,56,57,67,86,92,93,96,109,115,127,],[68,68,68,68,68,68,68,68,68,68,68,68,68,]),'def_exp':([54,127,],[72,140,]),'expresiones':([57,],[77,]),'var':([59,],[81,]),'comparar':([62,],[85,]),'signo':([62,],[86,]),'suma_resta':([63,123,124,],[91,137,138,]),'multi_div':([64,125,],[95,139,]),'operacion_mul_div':([64,125,],[96,96,]),'id_cte':([68,],[101,]),'cte':([68,],[103,]),'f_call_expr':([68,],[104,]),'coma2':([73,129,],[108,141,]),'comas':([78,79,133,134,],[114,117,146,147,]),'coma':([80,153,],[118,154,]),'else':([130,],[142,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON dec_var dec_funs TOKEN_MAIN body TOKEN_END','programa',8,'p_programa','yacc.py',7),
  ('dec_var -> vars','dec_var',1,'p_dec_var','yacc.py',13),
  ('dec_var -> empty','dec_var',1,'p_dec_var','yacc.py',14),
  ('dec_funs -> funs dec_funs','dec_funs',2,'p_dec_funs','yacc.py',20),
  ('dec_funs -> empty','dec_funs',1,'p_dec_funs','yacc.py',21),
  ('vars -> TOKEN_VAR variable rep_var','vars',3,'p_vars','yacc.py',34),
  ('rep_var -> variable rep_var','rep_var',2,'p_rep_var','yacc.py',43),
  ('rep_var -> empty','rep_var',1,'p_rep_var','yacc.py',44),
  ('variable -> TOKEN_ID mas_ids TOKEN_COLON type TOKEN_SEMICOLON','variable',5,'p_variable','yacc.py',57),
  ('mas_ids -> TOKEN_COMMA TOKEN_ID mas_ids','mas_ids',3,'p_mas_ids','yacc.py',63),
  ('mas_ids -> empty','mas_ids',1,'p_mas_ids','yacc.py',64),
  ('type -> TOKEN_INT','type',1,'p_type','yacc.py',73),
  ('type -> TOKEN_FLOAT','type',1,'p_type','yacc.py',74),
  ('body -> TOKEN_LBRACE dec_statements TOKEN_RBRACE','body',3,'p_body','yacc.py',80),
  ('dec_statements -> statement dec_statements','dec_statements',2,'p_dec_statements','yacc.py',86),
  ('dec_statements -> empty','dec_statements',1,'p_dec_statements','yacc.py',87),
  ('statement -> assign','statement',1,'p_statement','yacc.py',101),
  ('statement -> condition','statement',1,'p_statement','yacc.py',102),
  ('statement -> cycle','statement',1,'p_statement','yacc.py',103),
  ('statement -> f_call','statement',1,'p_statement','yacc.py',104),
  ('statement -> print','statement',1,'p_statement','yacc.py',105),
  ('print -> TOKEN_PRINT TOKEN_LPAREN expresiones TOKEN_RPAREN TOKEN_SEMICOLON','print',5,'p_print','yacc.py',112),
  ('expresiones -> TOKEN_CTE_STRING comas','expresiones',2,'p_expresiones','yacc.py',117),
  ('expresiones -> expresion comas','expresiones',2,'p_expresiones','yacc.py',118),
  ('comas -> TOKEN_COMMA expresion comas','comas',3,'p_comas','yacc.py',128),
  ('comas -> TOKEN_COMMA TOKEN_CTE_STRING comas','comas',3,'p_comas','yacc.py',129),
  ('comas -> empty','comas',1,'p_comas','yacc.py',130),
  ('cycle -> TOKEN_WHILE TOKEN_LPAREN expresion TOKEN_RPAREN TOKEN_DO body TOKEN_SEMICOLON','cycle',7,'p_cycle','yacc.py',145),
  ('condition -> TOKEN_IF TOKEN_LPAREN expresion TOKEN_RPAREN body else TOKEN_SEMICOLON','condition',7,'p_condition','yacc.py',152),
  ('else -> TOKEN_ELSE body','else',2,'p_else','yacc.py',159),
  ('else -> empty','else',1,'p_else','yacc.py',160),
  ('cte -> TOKEN_CTE_INT','cte',1,'p_cte','yacc.py',170),
  ('cte -> TOKEN_CTE_FLOAT','cte',1,'p_cte','yacc.py',171),
  ('expresion -> exp comparar','expresion',2,'p_expresion','yacc.py',177),
  ('comparar -> signo exp','comparar',2,'p_comparar','yacc.py',187),
  ('comparar -> empty','comparar',1,'p_comparar','yacc.py',188),
  ('signo -> TOKEN_GT','signo',1,'p_signo','yacc.py',198),
  ('signo -> TOKEN_LT','signo',1,'p_signo','yacc.py',199),
  ('signo -> TOKEN_NE','signo',1,'p_signo','yacc.py',200),
  ('exp -> termino suma_resta','exp',2,'p_exp','yacc.py',206),
  ('suma_resta -> TOKEN_PLUS termino suma_resta','suma_resta',3,'p_suma_resta','yacc.py',216),
  ('suma_resta -> TOKEN_MINUS termino suma_resta','suma_resta',3,'p_suma_resta','yacc.py',217),
  ('suma_resta -> empty','suma_resta',1,'p_suma_resta','yacc.py',218),
  ('opcion_mas_menos -> TOKEN_PLUS','opcion_mas_menos',1,'p_opcion_mas_menos','yacc.py',233),
  ('opcion_mas_menos -> TOKEN_MINUS','opcion_mas_menos',1,'p_opcion_mas_menos','yacc.py',234),
  ('termino -> factor multi_div','termino',2,'p_termino','yacc.py',240),
  ('multi_div -> operacion_mul_div factor multi_div','multi_div',3,'p_multi_div','yacc.py',250),
  ('multi_div -> empty','multi_div',1,'p_multi_div','yacc.py',251),
  ('operacion_mul_div -> TOKEN_DIV','operacion_mul_div',1,'p_operacion_mul_div','yacc.py',264),
  ('operacion_mul_div -> TOKEN_MULT','operacion_mul_div',1,'p_operacion_mul_div','yacc.py',265),
  ('factor -> definicion','factor',1,'p_factor','yacc.py',271),
  ('factor -> operaciones','factor',1,'p_factor','yacc.py',272),
  ('definicion -> TOKEN_LPAREN expresion TOKEN_RPAREN','definicion',3,'p_definicion','yacc.py',277),
  ('operaciones -> opciones_mas_menos id_cte','operaciones',2,'p_operaciones','yacc.py',283),
  ('opciones_mas_menos -> TOKEN_PLUS','opciones_mas_menos',1,'p_opciones_mas_menos','yacc.py',293),
  ('opciones_mas_menos -> TOKEN_MINUS','opciones_mas_menos',1,'p_opciones_mas_menos','yacc.py',294),
  ('opciones_mas_menos -> empty','opciones_mas_menos',1,'p_opciones_mas_menos','yacc.py',295),
  ('id_cte -> TOKEN_ID','id_cte',1,'p_id_cte','yacc.py',303),
  ('id_cte -> cte','id_cte',1,'p_id_cte','yacc.py',304),
  ('id_cte -> f_call_expr','id_cte',1,'p_id_cte','yacc.py',305),
  ('f_call_expr -> TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN','f_call_expr',4,'p_f_call_expr','yacc.py',314),
  ('funs -> TOKEN_VOID TOKEN_ID TOKEN_LPAREN tipo TOKEN_RPAREN var body TOKEN_SEMICOLON','funs',8,'p_funs','yacc.py',321),
  ('tipo -> def_tipo','tipo',1,'p_tipo','yacc.py',327),
  ('tipo -> empty','tipo',1,'p_tipo','yacc.py',328),
  ('def_tipo -> TOKEN_ID TOKEN_COLON type coma','def_tipo',4,'p_def_tipo','yacc.py',338),
  ('coma -> TOKEN_COMMA TOKEN_ID TOKEN_COLON type coma','coma',5,'p_coma','yacc.py',347),
  ('coma -> empty','coma',1,'p_coma','yacc.py',348),
  ('var -> vars','var',1,'p_var','yacc.py',362),
  ('var -> empty','var',1,'p_var','yacc.py',363),
  ('f_call -> TOKEN_ID TOKEN_LPAREN def_exp TOKEN_RPAREN TOKEN_SEMICOLON','f_call',5,'p_f_call','yacc.py',373),
  ('def_exp -> expresion coma2','def_exp',2,'p_def_exp','yacc.py',379),
  ('def_exp -> empty','def_exp',1,'p_def_exp','yacc.py',380),
  ('coma2 -> TOKEN_COMMA expresion coma2','coma2',3,'p_coma2','yacc.py',390),
  ('coma2 -> empty','coma2',1,'p_coma2','yacc.py',391),
  ('assign -> TOKEN_ID TOKEN_ASSIGN expresion TOKEN_SEMICOLON','assign',4,'p_assign','yacc.py',402),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',409),
]
